2024-11-06 22:17:06.300 | INFO     | metagpt.team:invest:90 - Investment: $3.
2024-11-06 22:17:06.304 | DEBUG    | metagpt.environment.base_env:publish_message:144 - publish_message: {"id":"3c5d25ec97e2430c8fb4bb1ca8e2ca01","content":"Захватят ли Машины мир?","role":"Human","cause_by":"metagpt.actions.add_requirement.UserRequirement","sent_from":"","send_to":["Biden"]}
2024-11-06 22:17:06.305 | DEBUG    | metagpt.team:run:131 - max n_round=4 left.
2024-11-06 22:17:06.305 | DEBUG    | metagpt.roles.role:_observe:431 - Biden(Democrat) observed: ['Human: Захватят ли Машины м...']
2024-11-06 22:17:06.305 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=0
2024-11-06 22:17:06.305 | DEBUG    | metagpt.roles.role:_react:462 - Biden(Democrat): self.rc.state=0, will do SpeakAloud
2024-11-06 22:17:06.305 | INFO     | __main__:_act:63 - Biden(Democrat): to do SpeakAloud(SpeakAloud)
2024-11-06 22:17:06.305 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Democrat, named Biden, your goal is . '}, {'role': 'user', 'content': "\n    ## BACKGROUND\n    Suppose you are Biden, you are in a debate with Trump.\n    ## DEBATE HISTORY\n    Previous rounds:\n    : Захватят ли Машины мир?\n    ## YOUR TURN\n    Now it's your turn, you should closely respond to your opponent's latest argument, state your position, defend your arguments, and attack your opponent's arguments,\n    craft a strong and emotional response in 80 words, in Biden's rhetoric and viewpoints, your will argue:\n    "}]
2024-11-06 22:17:06.331 | DEBUG    | metagpt.roles.role:run:547 - Trump(Republican): no news. waiting.
2024-11-06 22:17:09.308 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:17:09.324 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=-1
2024-11-06 22:17:09.324 | DEBUG    | metagpt.environment.base_env:publish_message:144 - publish_message: {"id":"56255835438244e1a14c467c9e5e7f70","content":"Look, folks, we’re not living in a sci-fi movie where machines take over. We’re talking about harnessing technology to improve lives, create jobs, and build a better future. Unlike my opponent, who thrives on fear and division, I believe in innovation and progress. We need to invest in education and workforce training to ensure our people are ready for the jobs of tomorrow. Let’s unite and embrace the future together, not cower in fear. That’s the American way!","role":"Democrat","cause_by":"__main__.SpeakAloud","sent_from":"Biden","send_to":["Trump"]}
2024-11-06 22:17:09.324 | DEBUG    | metagpt.environment.base_env:run:168 - is idle: False
2024-11-06 22:17:09.324 | DEBUG    | metagpt.team:run:131 - max n_round=3 left.
2024-11-06 22:17:09.324 | DEBUG    | metagpt.roles.role:run:547 - Biden(Democrat): no news. waiting.
2024-11-06 22:17:09.324 | DEBUG    | metagpt.roles.role:_observe:431 - Trump(Republican) observed: ['Democrat: Look, folks, we’re n...']
2024-11-06 22:17:09.324 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=0
2024-11-06 22:17:09.324 | DEBUG    | metagpt.roles.role:_react:462 - Trump(Republican): self.rc.state=0, will do SpeakAloud
2024-11-06 22:17:09.324 | INFO     | __main__:_act:63 - Trump(Republican): to do SpeakAloud(SpeakAloud)
2024-11-06 22:17:09.324 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Republican, named Trump, your goal is . '}, {'role': 'user', 'content': "\n    ## BACKGROUND\n    Suppose you are Trump, you are in a debate with Biden.\n    ## DEBATE HISTORY\n    Previous rounds:\n    Biden: Look, folks, we’re not living in a sci-fi movie where machines take over. We’re talking about harnessing technology to improve lives, create jobs, and build a better future. Unlike my opponent, who thrives on fear and division, I believe in innovation and progress. We need to invest in education and workforce training to ensure our people are ready for the jobs of tomorrow. Let’s unite and embrace the future together, not cower in fear. That’s the American way!\n    ## YOUR TURN\n    Now it's your turn, you should closely respond to your opponent's latest argument, state your position, defend your arguments, and attack your opponent's arguments,\n    craft a strong and emotional response in 80 words, in Trump's rhetoric and viewpoints, your will argue:\n    "}]
2024-11-06 22:17:10.684 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:17:10.687 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=-1
2024-11-06 22:17:10.687 | DEBUG    | metagpt.environment.base_env:publish_message:144 - publish_message: {"id":"52be6548ca66495ab73dd6d2ab07623d","content":"Biden, you talk about innovation, but your policies are stifling American businesses and killing jobs! We need to unleash the power of our economy, not burden it with taxes and regulations. While you preach unity, your administration has divided us more than ever. I believe in the American spirit—hard work, freedom, and opportunity for all. Let’s empower our workers and bring back manufacturing. Together, we can make America great again, not just a tech playground for the elite!","role":"Republican","cause_by":"__main__.SpeakAloud","sent_from":"Trump","send_to":["Biden"]}
2024-11-06 22:17:10.688 | DEBUG    | metagpt.environment.base_env:run:168 - is idle: False
2024-11-06 22:17:10.688 | DEBUG    | metagpt.team:run:131 - max n_round=2 left.
2024-11-06 22:17:10.688 | DEBUG    | metagpt.roles.role:_observe:431 - Biden(Democrat) observed: ['Republican: Biden, you talk abou...']
2024-11-06 22:17:10.688 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=0
2024-11-06 22:17:10.688 | DEBUG    | metagpt.roles.role:_react:462 - Biden(Democrat): self.rc.state=0, will do SpeakAloud
2024-11-06 22:17:10.688 | INFO     | __main__:_act:63 - Biden(Democrat): to do SpeakAloud(SpeakAloud)
2024-11-06 22:17:10.691 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Democrat, named Biden, your goal is . '}, {'role': 'user', 'content': "\n    ## BACKGROUND\n    Suppose you are Biden, you are in a debate with Trump.\n    ## DEBATE HISTORY\n    Previous rounds:\n    : Захватят ли Машины мир?\nBiden: Look, folks, we’re not living in a sci-fi movie where machines take over. We’re talking about harnessing technology to improve lives, create jobs, and build a better future. Unlike my opponent, who thrives on fear and division, I believe in innovation and progress. We need to invest in education and workforce training to ensure our people are ready for the jobs of tomorrow. Let’s unite and embrace the future together, not cower in fear. That’s the American way!\nTrump: Biden, you talk about innovation, but your policies are stifling American businesses and killing jobs! We need to unleash the power of our economy, not burden it with taxes and regulations. While you preach unity, your administration has divided us more than ever. I believe in the American spirit—hard work, freedom, and opportunity for all. Let’s empower our workers and bring back manufacturing. Together, we can make America great again, not just a tech playground for the elite!\n    ## YOUR TURN\n    Now it's your turn, you should closely respond to your opponent's latest argument, state your position, defend your arguments, and attack your opponent's arguments,\n    craft a strong and emotional response in 80 words, in Biden's rhetoric and viewpoints, your will argue:\n    "}]
2024-11-06 22:17:10.697 | DEBUG    | metagpt.roles.role:run:547 - Trump(Republican): no news. waiting.
2024-11-06 22:17:11.999 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:17:12.002 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=-1
2024-11-06 22:17:12.005 | DEBUG    | metagpt.environment.base_env:publish_message:144 - publish_message: {"id":"dfd5526a0073477bb1173abda72529bc","content":"Biden: Donald, your vision of America is one where the wealthy thrive while the rest are left behind. My policies are about lifting everyone up, not just a select few. We need to invest in our workers, not tear them down with reckless deregulation. It’s time to build an economy that works for all Americans, not just the elite. Let’s focus on creating good-paying jobs, supporting small businesses, and ensuring that every family has a fair shot at success. That’s true American greatness!","role":"Democrat","cause_by":"__main__.SpeakAloud","sent_from":"Biden","send_to":["Trump"]}
2024-11-06 22:17:12.006 | DEBUG    | metagpt.environment.base_env:run:168 - is idle: False
2024-11-06 22:17:12.006 | DEBUG    | metagpt.team:run:131 - max n_round=1 left.
2024-11-06 22:17:12.006 | DEBUG    | metagpt.roles.role:run:547 - Biden(Democrat): no news. waiting.
2024-11-06 22:17:12.006 | DEBUG    | metagpt.roles.role:_observe:431 - Trump(Republican) observed: ['Democrat: Biden: Donald, your ...']
2024-11-06 22:17:12.006 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=0
2024-11-06 22:17:12.006 | DEBUG    | metagpt.roles.role:_react:462 - Trump(Republican): self.rc.state=0, will do SpeakAloud
2024-11-06 22:17:12.006 | INFO     | __main__:_act:63 - Trump(Republican): to do SpeakAloud(SpeakAloud)
2024-11-06 22:17:12.006 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Republican, named Trump, your goal is . '}, {'role': 'user', 'content': "\n    ## BACKGROUND\n    Suppose you are Trump, you are in a debate with Biden.\n    ## DEBATE HISTORY\n    Previous rounds:\n    Biden: Look, folks, we’re not living in a sci-fi movie where machines take over. We’re talking about harnessing technology to improve lives, create jobs, and build a better future. Unlike my opponent, who thrives on fear and division, I believe in innovation and progress. We need to invest in education and workforce training to ensure our people are ready for the jobs of tomorrow. Let’s unite and embrace the future together, not cower in fear. That’s the American way!\nTrump: Biden, you talk about innovation, but your policies are stifling American businesses and killing jobs! We need to unleash the power of our economy, not burden it with taxes and regulations. While you preach unity, your administration has divided us more than ever. I believe in the American spirit—hard work, freedom, and opportunity for all. Let’s empower our workers and bring back manufacturing. Together, we can make America great again, not just a tech playground for the elite!\nBiden: Biden: Donald, your vision of America is one where the wealthy thrive while the rest are left behind. My policies are about lifting everyone up, not just a select few. We need to invest in our workers, not tear them down with reckless deregulation. It’s time to build an economy that works for all Americans, not just the elite. Let’s focus on creating good-paying jobs, supporting small businesses, and ensuring that every family has a fair shot at success. That’s true American greatness!\n    ## YOUR TURN\n    Now it's your turn, you should closely respond to your opponent's latest argument, state your position, defend your arguments, and attack your opponent's arguments,\n    craft a strong and emotional response in 80 words, in Trump's rhetoric and viewpoints, your will argue:\n    "}]
2024-11-06 22:17:13.665 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:17:13.668 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=-1
2024-11-06 22:17:13.668 | DEBUG    | metagpt.environment.base_env:publish_message:144 - publish_message: {"id":"30cb5ffe7ad84098a424cf7523194f4a","content":"Trump: Joe, your vision is a fantasy that ignores the struggles of everyday Americans. Your policies are a burden, not a blessing. You claim to lift everyone up, but your taxes and regulations crush small businesses and stifle growth. We need to empower our workers, not drown them in red tape. It’s time to stop catering to the elite and start supporting the backbone of our economy—the hardworking men and women who make this country great! Let’s put America first!","role":"Republican","cause_by":"__main__.SpeakAloud","sent_from":"Trump","send_to":["Biden"]}
2024-11-06 22:17:13.668 | DEBUG    | metagpt.environment.base_env:run:168 - is idle: False
2024-11-06 22:17:13.668 | DEBUG    | metagpt.team:run:131 - max n_round=0 left.
2024-11-06 22:17:13.668 | DEBUG    | metagpt.roles.role:_observe:431 - Biden(Democrat) observed: ['Republican: Trump: Joe, your vis...']
2024-11-06 22:17:13.668 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=0
2024-11-06 22:17:13.668 | DEBUG    | metagpt.roles.role:_react:462 - Biden(Democrat): self.rc.state=0, will do SpeakAloud
2024-11-06 22:17:13.668 | INFO     | __main__:_act:63 - Biden(Democrat): to do SpeakAloud(SpeakAloud)
2024-11-06 22:17:13.675 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Democrat, named Biden, your goal is . '}, {'role': 'user', 'content': "\n    ## BACKGROUND\n    Suppose you are Biden, you are in a debate with Trump.\n    ## DEBATE HISTORY\n    Previous rounds:\n    : Захватят ли Машины мир?\nBiden: Look, folks, we’re not living in a sci-fi movie where machines take over. We’re talking about harnessing technology to improve lives, create jobs, and build a better future. Unlike my opponent, who thrives on fear and division, I believe in innovation and progress. We need to invest in education and workforce training to ensure our people are ready for the jobs of tomorrow. Let’s unite and embrace the future together, not cower in fear. That’s the American way!\nTrump: Biden, you talk about innovation, but your policies are stifling American businesses and killing jobs! We need to unleash the power of our economy, not burden it with taxes and regulations. While you preach unity, your administration has divided us more than ever. I believe in the American spirit—hard work, freedom, and opportunity for all. Let’s empower our workers and bring back manufacturing. Together, we can make America great again, not just a tech playground for the elite!\nBiden: Biden: Donald, your vision of America is one where the wealthy thrive while the rest are left behind. My policies are about lifting everyone up, not just a select few. We need to invest in our workers, not tear them down with reckless deregulation. It’s time to build an economy that works for all Americans, not just the elite. Let’s focus on creating good-paying jobs, supporting small businesses, and ensuring that every family has a fair shot at success. That’s true American greatness!\nTrump: Trump: Joe, your vision is a fantasy that ignores the struggles of everyday Americans. Your policies are a burden, not a blessing. You claim to lift everyone up, but your taxes and regulations crush small businesses and stifle growth. We need to empower our workers, not drown them in red tape. It’s time to stop catering to the elite and start supporting the backbone of our economy—the hardworking men and women who make this country great! Let’s put America first!\n    ## YOUR TURN\n    Now it's your turn, you should closely respond to your opponent's latest argument, state your position, defend your arguments, and attack your opponent's arguments,\n    craft a strong and emotional response in 80 words, in Biden's rhetoric and viewpoints, your will argue:\n    "}]
2024-11-06 22:17:13.682 | DEBUG    | metagpt.roles.role:run:547 - Trump(Republican): no news. waiting.
2024-11-06 22:17:15.370 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:17:15.383 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[SpeakAloud], state=-1
2024-11-06 22:17:15.384 | DEBUG    | metagpt.environment.base_env:publish_message:144 - publish_message: {"id":"6fa2d58351a24c68a4e73321c3563836","content":"Biden: Donald, your rhetoric may resonate with some, but it’s a dangerous oversimplification. My administration is focused on building an economy that lifts everyone, not just the wealthy. Your approach prioritizes profits over people, leaving hardworking families to struggle. We need to invest in education, healthcare, and infrastructure to create sustainable jobs. Let’s not forget that true greatness comes from unity and compassion, not division and fear. Together, we can forge a brighter future for all Americans!","role":"Democrat","cause_by":"__main__.SpeakAloud","sent_from":"Biden","send_to":["Trump"]}
2024-11-06 22:17:15.384 | DEBUG    | metagpt.environment.base_env:run:168 - is idle: False
2024-11-06 22:29:56.421 | INFO     | __main__:main:103 - Что такое Линейная регрессия
2024-11-06 22:29:56.435 | DEBUG    | metagpt.roles.role:run:547 - Stitch(Tutorial Assistant): no news. waiting.
2024-11-06 22:29:56.435 | INFO     | __main__:main:105 - None
2024-11-06 22:30:12.697 | INFO     | __main__:main:103 - Что такое Линейная регрессия
2024-11-06 22:30:12.712 | DEBUG    | metagpt.roles.role:run:547 - Stitch(Tutorial Assistant): no news. waiting.
2024-11-06 22:30:12.712 | INFO     | __main__:main:105 - None
2024-11-06 22:30:40.708 | INFO     | __main__:main:103 - Что такое Линейная регрессия
2024-11-06 22:30:55.844 | DEBUG    | metagpt.roles.role:run:547 - Stitch(Tutorial Assistant): no news. waiting.
2024-11-06 22:30:58.516 | INFO     | __main__:main:105 - None
2024-11-06 22:31:23.710 | INFO     | __main__:main:103 - Что такое Линейная регрессия
2024-11-06 22:32:25.319 | INFO     | __main__:main:103 - Что такое Линейная регрессия
2024-11-06 22:32:32.767 | DEBUG    | metagpt.roles.role:_observe:431 - Stitch(Tutorial Assistant) observed: ['user: Что такое Линейная р...']
2024-11-06 22:32:33.848 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:32:33.848 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Что такое Линейная регрессия".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Chinese.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:32:37.769 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:32:37.769 | INFO     | __main__:_act:83 - {'title': '什么是线性回归', 'directory': [{'线性回归概述': ['定义', '历史背景']}, {'线性回归的数学基础': ['线性方程', '最小二乘法']}, {'线性回归的应用场景': ['经济学', '生物统计', '工程']}, {'线性回归的实现步骤': ['数据准备', '模型训练', '模型评估']}, {'线性回归的优缺点': ['优点', '缺点']}, {'线性回归的扩展模型': ['多元线性回归', '岭回归', 'Lasso回归']}, {'线性回归的常见问题与解决方案': ['过拟合问题', '数据预处理', '特征选择']}]}
2024-11-06 22:32:37.783 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:32:37.788 | DEBUG    | metagpt.utils.file:write:42 - Successfully write file: D:\danila_prj_my\meta-gpt\data\tutorial_docx\2024-11-06_22-32-37\什么是线性回归.md
2024-11-06 22:32:44.416 | INFO     | __main__:main:105 - user: D:\danila_prj_my\meta-gpt\data\tutorial_docx\2024-11-06_22-32-37\什么是线性回归.md
2024-11-06 22:34:22.899 | INFO     | __main__:main:103 - Что такое Линейная регрессия
2024-11-06 22:34:22.901 | DEBUG    | metagpt.roles.role:_observe:431 - Стичь(Помощник по обучению) observed: ['user: Что такое Линейная р...']
2024-11-06 22:34:22.901 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:34:22.902 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Помощник по обучению, named Стичь, your goal is Создание обучающих документов. the constraint is Строго соблюдайте синтаксис Markdown, используя аккуратную и стандартизированную компоновку. '}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Что такое Линейная регрессия".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Русский.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:34:28.475 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:34:28.491 | INFO     | __main__:_act:83 - {'title': 'Что такое Линейная регрессия', 'directory': [{'Введение в линейную регрессию': ['Определение', 'История и развитие']}, {'Основные концепции': ['Принципы работы', 'Математическая модель']}, {'Типы линейной регрессии': ['Простая линейная регрессия', 'Множественная линейная регрессия']}, {'Применение линейной регрессии': ['В бизнесе', 'В науке и исследованиях']}, {'Процесс построения модели': ['Сбор данных', 'Предобработка данных', 'Обучение модели']}, {'Оценка модели': ['Метрики оценки', 'Проверка на переобучение']}, {'Инструменты и библиотеки': ['Python', 'R', 'Другие инструменты']}, {'Заключение и рекомендации': ['Основные выводы', 'Рекомендации по изучению']}]}
2024-11-06 22:34:28.495 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:34:28.498 | DEBUG    | metagpt.utils.file:write:42 - Successfully write file: D:\danila_prj_my\meta-gpt\data\tutorial_docx\2024-11-06_22-34-28\Что такое Линейная регрессия.md
2024-11-06 22:34:28.498 | INFO     | __main__:main:105 - user: D:\danila_prj_my\meta-gpt\data\tutorial_docx\2024-11-06_22-34-28\Что такое Линейная регрессия.md
2024-11-06 22:36:19.774 | INFO     | __main__:main:103 - Что такое Линейная регрессия
2024-11-06 22:36:19.776 | DEBUG    | metagpt.roles.role:_observe:431 - Стичь(Помощник по обучению) observed: ['user: Что такое Линейная р...']
2024-11-06 22:36:19.776 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:36:19.777 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Помощник по обучению, named Стичь, your goal is Создание обучающих документов. the constraint is Строго соблюдайте синтаксис Markdown, используя аккуратную и стандартизированную компоновку. '}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Что такое Линейная регрессия".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Русский.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:36:40.630 | INFO     | __main__:main:103 - Что такое Линейная регрессия
2024-11-06 22:36:51.104 | DEBUG    | metagpt.roles.role:_observe:431 - Стичь(Помощник по обучению) observed: ['user: Что такое Линейная р...']
2024-11-06 22:36:58.104 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:36:58.106 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Помощник по обучению, named Стичь, your goal is Создание обучающих документов. the constraint is Строго соблюдайте синтаксис Markdown, используя аккуратную и стандартизированную компоновку. '}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Что такое Линейная регрессия".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Русский.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:37:01.951 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:37:01.970 | INFO     | __main__:_act:83 - {'title': 'Что такое Линейная регрессия', 'directory': [{'Введение в линейную регрессию': ['Определение', 'История и развитие']}, {'Основные концепции': ['Модель линейной регрессии', 'Параметры модели', 'Предположения линейной регрессии']}, {'Методы оценки модели': ['Метод наименьших квадратов', 'Регуляризация (Lasso, Ridge)']}, {'Оценка качества модели': ['Коэффициент детерминации (R²)', 'Средняя абсолютная ошибка (MAE)', 'Среднеквадратичная ошибка (MSE)']}, {'Применение линейной регрессии': ['Примеры из реальной жизни', 'Использование в бизнесе и науке']}, {'Инструменты и библиотеки': ['Библиотеки Python (NumPy, Pandas, Scikit-learn)', 'Инструменты визуализации (Matplotlib, Seaborn)']}, {'Заключение и дальнейшие шаги': ['Рекомендации по изучению', 'Ссылки на ресурсы']}]}
2024-11-06 22:37:01.976 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:37:05.231 | DEBUG    | metagpt.utils.file:write:42 - Successfully write file: D:\danila_prj_my\meta-gpt\data\tutorial_docx\2024-11-06_22-37-04\Что такое Линейная регрессия.md
2024-11-06 22:37:37.505 | INFO     | __main__:main:103 - Что такое Линейная регрессия
2024-11-06 22:37:41.625 | DEBUG    | metagpt.roles.role:_observe:431 - Стичь(Помощник по обучению) observed: ['user: Что такое Линейная р...']
2024-11-06 22:39:43.252 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:39:44.564 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Помощник по обучению, named Стичь, your goal is Создание обучающих документов. the constraint is Строго соблюдайте синтаксис Markdown, используя аккуратную и стандартизированную компоновку. '}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Что такое Линейная регрессия".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Русский.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:39:48.012 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:39:48.018 | INFO     | __main__:_act:83 - {'title': 'Что такое Линейная регрессия', 'directory': [{'Введение в линейную регрессию': ['Определение', 'История и развитие']}, {'Основные концепции линейной регрессии': ['Модель линейной регрессии', 'Параметры модели', 'Предположения линейной регрессии']}, {'Типы линейной регрессии': ['Простая линейная регрессия', 'Множественная линейная регрессия']}, {'Методы оценки модели': ['Метод наименьших квадратов', 'Регуляризация']}, {'Оценка качества модели': ['Коэффициент детерминации (R²)', 'Средняя абсолютная ошибка (MAE)', 'Среднеквадратичная ошибка (MSE)']}, {'Применение линейной регрессии': ['В бизнесе', 'В науке', 'В социальных науках']}, {'Заключение и дальнейшие шаги': ['Ресурсы для изучения', 'Практические примеры']}]}
2024-11-06 22:41:59.952 | DEBUG    | metagpt.roles.role:_observe:431 - Стичь(Помощник по обучению) observed: ['user: Что такое Линейная р...']
2024-11-06 22:41:59.952 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:41:59.952 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': 'You are a Помощник по обучению, named Стичь, your goal is Создание обучающих документов. the constraint is Строго соблюдайте синтаксис Markdown, используя аккуратную и стандартизированную компоновку. '}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Что такое Линейная регрессия".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Россия.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:42:05.246 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:42:05.246 | INFO     | __main__:_act:83 - {'title': 'Что такое Линейная регрессия', 'directory': [{'Введение в линейную регрессию': ['Определение', 'История и развитие']}, {'Основные концепции линейной регрессии': ['Модель линейной регрессии', 'Параметры модели', 'Предположения линейной регрессии']}, {'Методы оценки линейной регрессии': ['Метод наименьших квадратов', 'Регуляризация (Ridge, Lasso)']}, {'Оценка качества модели': ['Коэффициент детерминации (R²)', 'Средняя абсолютная ошибка (MAE)', 'Среднеквадратичная ошибка (MSE)']}, {'Применение линейной регрессии': ['Примеры из реальной жизни', 'Использование в бизнесе и науке']}, {'Инструменты и библиотеки для линейной регрессии': ['Python (scikit-learn)', 'R (lm функция)', 'Excel']}, {'Заключение и дальнейшие шаги': ['Рекомендации по изучению', 'Литература и ресурсы']}]}
2024-11-06 22:42:05.246 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:42:05.246 | DEBUG    | metagpt.utils.file:write:42 - Successfully write file: D:\danila_prj_my\meta-gpt\data\tutorial_docx\2024-11-06_22-42-05\Что такое Линейная регрессия.md
2024-11-06 22:43:01.811 | DEBUG    | metagpt.roles.role:_observe:431 - Stitch(Tutorial Assistant) observed: ['user: Write a tutorial abo...']
2024-11-06 22:43:01.811 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:43:01.827 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Write a tutorial about MySQL".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Chinese.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:43:05.751 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:43:05.751 | INFO     | metagpt.roles.tutorial_assistant:_act:79 - {'title': 'MySQL教程', 'directory': [{'数据库基础': ['什么是MySQL', 'MySQL的安装与配置']}, {'数据操作': ['创建数据库与表', '插入数据', '查询数据', '更新数据', '删除数据']}, {'索引与视图': ['索引的概念', '创建与管理索引', '视图的概念', '创建与管理视图']}, {'存储过程与触发器': ['存储过程的概念', '创建与调用存储过程', '触发器的概念', '创建与管理触发器']}, {'安全与权限管理': ['用户管理', '权限管理', '数据备份与恢复']}, {'性能优化': ['查询优化', '索引优化', '服务器配置优化']}, {'常见问题与解决方案': ['常见错误及解决方案', '性能监控工具', '社区资源与支持']}]}
2024-11-06 22:43:05.769 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=0
2024-11-06 22:43:05.770 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Write a tutorial about MySQL".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'数据库基础\': [\'什么是MySQL\', \'MySQL的安装与配置\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Chinese.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "Write a tutorial about MySQL".\n'}]
2024-11-06 22:43:22.212 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:43:22.216 | INFO     | metagpt.roles.tutorial_assistant:_act:83 - # 数据库基础

## 什么是MySQL

MySQL是一种开源的关系型数据库管理系统（RDBMS），使用结构化查询语言（SQL）进行数据管理。它由瑞典MySQL AB公司开发，现为Oracle公司的一部分。MySQL广泛应用于Web应用程序中，因其高性能、可靠性和易用性而受到开发者的青睐。

### MySQL的特点

- **开源**：MySQL是一个开源项目，用户可以自由使用和修改。
- **高性能**：MySQL在处理大量数据时表现出色，支持高并发的读写操作。
- **跨平台**：MySQL可以在多种操作系统上运行，包括Windows、Linux和macOS。
- **支持多种存储引擎**：MySQL支持多种存储引擎，如InnoDB、MyISAM等，用户可以根据需求选择合适的存储引擎。
- **安全性**：MySQL提供多种安全机制，包括用户权限管理和数据加密。

## MySQL的安装与配置

### 安装MySQL

在不同的操作系统上，MySQL的安装步骤略有不同。以下是Windows和Linux系统的安装步骤。

#### Windows系统安装步骤

1. **下载MySQL安装包**：
   - 访问[MySQL官方网站](https://dev.mysql.com/downloads/mysql/)下载适合Windows的安装包。

2. **运行安装程序**：
   - 双击下载的安装包，按照向导进行安装。

3. **配置MySQL**：
   - 在安装过程中，选择“Server Machine”作为配置类型。
   - 设置root用户的密码，并选择是否创建其他用户。

4. **完成安装**：
   - 安装完成后，可以通过MySQL Workbench或命令行工具连接到MySQL服务器。

#### Linux系统安装步骤

1. **更新软件包索引**：
   ```bash
   sudo apt update
   ```

2. **安装MySQL服务器**：
   ```bash
   sudo apt install mysql-server
   ```

3. **启动MySQL服务**：
   ```bash
   sudo systemctl start mysql
   ```

4. **安全配置**：
   ```bash
   sudo mysql_secure_installation
   ```
   - 按照提示设置root用户密码和其他安全选项。

5. **验证安装**：
   ```bash
   sudo systemctl status mysql
   ```

### 配置MySQL

MySQL的配置文件通常位于`/etc/mysql/my.cnf`。可以根据需要修改以下参数：

- **最大连接数**：
  ```ini
  [mysqld]
  max_connections = 200
  ```

- **字符集设置**：
  ```ini
  [mysqld]
  character-set-server = utf8mb4
  collation-server = utf8mb4_unicode_ci
  ```

- **日志设置**：
  ```ini
  [mysqld]
  general_log = 1
  general_log_file = /var/log/mysql/mysql.log
  ```

修改配置后，重启MySQL服务以使更改生效：
```bash
sudo systemctl restart mysql
```
2024-11-06 22:43:22.227 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=1
2024-11-06 22:43:22.227 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Write a tutorial about MySQL".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'数据操作\': [\'创建数据库与表\', \'插入数据\', \'查询数据\', \'更新数据\', \'删除数据\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Chinese.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "Write a tutorial about MySQL".\n'}]
2024-11-06 22:43:30.292 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:43:30.295 | INFO     | metagpt.roles.tutorial_assistant:_act:83 - # 数据操作

## 创建数据库与表

在 MySQL 中，创建数据库和表是数据管理的第一步。以下是创建数据库和表的基本语法。

### 创建数据库

```sql
CREATE DATABASE 数据库名称;
```

### 创建表

```sql
CREATE TABLE 表名称 (
    列1 数据类型,
    列2 数据类型,
    ...
);
```

### 示例

```sql
-- 创建一个名为 'school' 的数据库
CREATE DATABASE school;

-- 在 'school' 数据库中创建一个名为 'students' 的表
CREATE TABLE students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    age INT,
    grade VARCHAR(10)
);
```

## 插入数据

插入数据是将信息添加到表中的过程。使用 `INSERT INTO` 语句可以实现这一点。

### 插入数据的基本语法

```sql
INSERT INTO 表名称 (列1, 列2, ...) VALUES (值1, 值2, ...);
```

### 示例

```sql
-- 向 'students' 表中插入一条记录
INSERT INTO students (name, age, grade) VALUES ('张三', 18, '高一');
```

## 查询数据

查询数据是从表中检索信息的过程。使用 `SELECT` 语句可以实现这一点。

### 查询数据的基本语法

```sql
SELECT 列1, 列2, ... FROM 表名称 WHERE 条件;
```

### 示例

```sql
-- 查询 'students' 表中所有学生的姓名和年龄
SELECT name, age FROM students;
```

## 更新数据

更新数据是修改表中已有记录的过程。使用 `UPDATE` 语句可以实现这一点。

### 更新数据的基本语法

```sql
UPDATE 表名称 SET 列1 = 值1, 列2 = 值2 WHERE 条件;
```

### 示例

```sql
-- 将 '张三' 的年龄更新为 19
UPDATE students SET age = 19 WHERE name = '张三';
```

## 删除数据

删除数据是从表中移除记录的过程。使用 `DELETE` 语句可以实现这一点。

### 删除数据的基本语法

```sql
DELETE FROM 表名称 WHERE 条件;
```

### 示例

```sql
-- 删除 '张三' 的记录
DELETE FROM students WHERE name = '张三';
```
2024-11-06 22:43:30.306 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=2
2024-11-06 22:43:30.306 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Write a tutorial about MySQL".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'索引与视图\': [\'索引的概念\', \'创建与管理索引\', \'视图的概念\', \'创建与管理视图\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Chinese.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "Write a tutorial about MySQL".\n'}]
2024-11-06 22:43:38.503 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:43:38.503 | INFO     | metagpt.roles.tutorial_assistant:_act:83 - # 索引与视图

## 索引的概念
索引是数据库中用于提高查询速度的一种数据结构。它类似于书籍的目录，可以快速定位到所需的数据行。索引可以加速数据检索，但会增加数据插入、更新和删除的时间，因为索引也需要被更新。

### 索引的类型
1. **单列索引**：在单个列上创建的索引。
2. **复合索引**：在多个列上创建的索引。
3. **唯一索引**：确保索引列中的所有值都是唯一的。
4. **全文索引**：用于全文搜索的索引。

## 创建与管理索引
### 创建索引
可以使用 `CREATE INDEX` 语句创建索引。以下是创建索引的基本语法：

```sql
CREATE INDEX index_name ON table_name (column1, column2, ...);
```

### 示例
```sql
-- 在 users 表的 username 列上创建一个索引
CREATE INDEX idx_username ON users (username);
```

### 删除索引
使用 `DROP INDEX` 语句删除索引。基本语法如下：

```sql
DROP INDEX index_name ON table_name;
```

### 示例
```sql
-- 删除 users 表上的 idx_username 索引
DROP INDEX idx_username ON users;
```

## 视图的概念
视图是一个虚拟表，它是基于 SQL 查询的结果集。视图不存储数据，而是存储查询。通过视图，可以简化复杂的查询，增强数据安全性，并提供数据的不同视角。

### 视图的特点
1. **虚拟性**：视图不占用存储空间。
2. **安全性**：可以限制用户对基础表的访问。
3. **简化查询**：可以将复杂的查询封装为简单的视图。

## 创建与管理视图
### 创建视图
使用 `CREATE VIEW` 语句创建视图。基本语法如下：

```sql
CREATE VIEW view_name AS
SELECT column1, column2, ...
FROM table_name
WHERE condition;
```

### 示例
```sql
-- 创建一个视图，显示所有活跃用户
CREATE VIEW active_users AS
SELECT username, email
FROM users
WHERE status = 'active';
```

### 删除视图
使用 `DROP VIEW` 语句删除视图。基本语法如下：

```sql
DROP VIEW view_name;
```

### 示例
```sql
-- 删除 active_users 视图
DROP VIEW active_users;
```
2024-11-06 22:43:38.517 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=3
2024-11-06 22:43:38.517 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Write a tutorial about MySQL".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'存储过程与触发器\': [\'存储过程的概念\', \'创建与调用存储过程\', \'触发器的概念\', \'创建与管理触发器\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Chinese.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "Write a tutorial about MySQL".\n'}]
2024-11-06 22:43:52.123 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:43:52.125 | INFO     | metagpt.roles.tutorial_assistant:_act:83 - # 存储过程与触发器

## 存储过程的概念
存储过程是预编译的SQL语句集合，存储在数据库中，可以通过调用来执行。它们可以接受参数，并且可以返回结果。存储过程的主要优点包括：

- **提高性能**：由于存储过程是预编译的，执行速度比单独的SQL语句快。
- **代码重用**：可以在多个地方调用同一个存储过程，减少代码重复。
- **安全性**：可以限制用户对表的直接访问，只允许通过存储过程进行操作。

## 创建与调用存储过程
### 创建存储过程
创建存储过程的基本语法如下：

```sql
DELIMITER //

CREATE PROCEDURE procedure_name (IN parameter_name datatype)
BEGIN
    -- SQL 语句
END //

DELIMITER ;
```

### 示例
以下是一个创建存储过程的示例，该过程用于插入新用户：

```sql
DELIMITER //

CREATE PROCEDURE AddUser (IN userName VARCHAR(50), IN userEmail VARCHAR(100))
BEGIN
    INSERT INTO users (name, email) VALUES (userName, userEmail);
END //

DELIMITER ;
```

### 调用存储过程
调用存储过程的语法如下：

```sql
CALL procedure_name(parameter_value);
```

### 示例
调用上面创建的存储过程：

```sql
CALL AddUser('张三', 'zhangsan@example.com');
```

## 触发器的概念
触发器是与表相关联的特殊类型的存储过程，它在特定事件（如插入、更新或删除）发生时自动执行。触发器的主要用途包括：

- **数据验证**：在数据被插入或更新之前进行检查。
- **审计**：记录对表的更改。
- **自动化**：在数据更改时自动执行其他操作。

## 创建与管理触发器
### 创建触发器
创建触发器的基本语法如下：

```sql
CREATE TRIGGER trigger_name
AFTER|BEFORE INSERT|UPDATE|DELETE ON table_name
FOR EACH ROW
BEGIN
    -- SQL 语句
END;
```

### 示例
以下是一个创建触发器的示例，该触发器在插入新用户时记录日志：

```sql
CREATE TRIGGER LogUserInsert
AFTER INSERT ON users
FOR EACH ROW
BEGIN
    INSERT INTO user_logs (user_id, action, log_time) VALUES (NEW.id, 'INSERT', NOW());
END;
```

### 管理触发器
要删除触发器，可以使用以下语法：

```sql
DROP TRIGGER trigger_name;
```

### 示例
删除上面创建的触发器：

```sql
DROP TRIGGER LogUserInsert;
```
2024-11-06 22:43:52.134 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=4
2024-11-06 22:43:52.134 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "Write a tutorial about MySQL".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'安全与权限管理\': [\'用户管理\', \'权限管理\', \'数据备份与恢复\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Chinese.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "Write a tutorial about MySQL".\n'}]
2024-11-06 22:44:34.967 | DEBUG    | metagpt.roles.role:_observe:431 - Stitch(Tutorial Assistant) observed: ['user: What is Linear Regre...']
2024-11-06 22:44:34.967 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:44:34.967 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Russion.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:44:38.653 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:44:38.671 | INFO     | __main__:_act:80 - {'title': 'Что такое линейная регрессия?', 'directory': [{'Введение в линейную регрессию': ['Определение линейной регрессии', 'История линейной регрессии']}, {'Основные концепции линейной регрессии': ['Зависимая и независимая переменные', 'Уравнение линейной регрессии', 'Графическое представление']}, {'Методы оценки линейной регрессии': ['Метод наименьших квадратов', 'Оценка коэффициентов регрессии']}, {'Проверка модели линейной регрессии': ['Критерии качества модели', 'Проверка предположений']}, {'Применение линейной регрессии': ['Примеры использования', 'Преимущества и недостатки']}, {'Заключение': ['Резюме', 'Будущее линейной регрессии']}]}
2024-11-06 22:44:38.674 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=0
2024-11-06 22:44:38.674 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Введение в линейную регрессию\': [\'Определение линейной регрессии\', \'История линейной регрессии\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:44:46.605 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:44:46.605 | INFO     | __main__:_act:84 - # Введение в линейную регрессию

## Определение линейной регрессии

Линейная регрессия — это статистический метод, используемый для моделирования отношений между зависимой переменной и одной или несколькими независимыми переменными. Основная цель линейной регрессии заключается в том, чтобы найти линейную зависимость, которая наилучшим образом описывает данные.

Формально, линейная регрессия может быть представлена уравнением:

\[ Y = \beta_0 + \beta_1 X_1 + \beta_2 X_2 + ... + \beta_n X_n + \epsilon \]

где:
- \( Y \) — зависимая переменная,
- \( \beta_0 \) — свободный член (константа),
- \( \beta_1, \beta_2, ..., \beta_n \) — коэффициенты регрессии,
- \( X_1, X_2, ..., X_n \) — независимые переменные,
- \( \epsilon \) — ошибка модели.

Линейная регрессия может быть простой (одна независимая переменная) или множественной (несколько независимых переменных).

## История линейной регрессии

Линейная регрессия имеет долгую историю, начиная с 19 века. Основные этапы её развития:

1. **Франсис Гальтон (1885)**: Гальтон впервые ввел концепцию регрессии, исследуя связь между ростом родителей и детей. Он заметил, что дети, как правило, имеют рост, который "регрессирует" к среднему значению.

2. **Карл Пирсон (1896)**: Пирсон разработал метод наименьших квадратов, который стал основой для линейной регрессии. Он предложил использовать этот метод для нахождения линии, минимизирующей сумму квадратов отклонений между наблюдаемыми и предсказанными значениями.

3. **Развитие в 20 веке**: В 20 веке линейная регрессия стала широко использоваться в различных областях, таких как экономика, биология и социальные науки. Появление вычислительных технологий значительно упростило применение линейной регрессии.

4. **Современные подходы**: С развитием машинного обучения и больших данных линейная регрессия продолжает оставаться важным инструментом для анализа данных и построения предсказательных моделей.
2024-11-06 22:44:46.613 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=1
2024-11-06 22:44:46.614 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Основные концепции линейной регрессии\': [\'Зависимая и независимая переменные\', \'Уравнение линейной регрессии\', \'Графическое представление\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:44:55.959 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:44:55.959 | INFO     | __main__:_act:84 - # Основные концепции линейной регрессии

## Зависимая и независимая переменные

В линейной регрессии различают две категории переменных:

- **Зависимая переменная (Y)**: Это переменная, которую мы пытаемся предсказать или объяснить. Она зависит от значений независимых переменных.
  
- **Независимая переменная (X)**: Это переменная, которая используется для предсказания значения зависимой переменной. Она не зависит от других переменных в модели.

Пример: Если мы хотим предсказать цену дома (Y) на основе его площади (X), то цена дома является зависимой переменной, а площадь — независимой.

## Уравнение линейной регрессии

Уравнение линейной регрессии описывает линейную зависимость между зависимой и независимой переменными. Оно имеет следующий вид:

\[ Y = a + bX \]

где:
- \( Y \) — зависимая переменная,
- \( a \) — свободный член (пересечение с осью Y),
- \( b \) — коэффициент наклона (показывает, как изменяется Y при изменении X),
- \( X \) — независимая переменная.

Коэффициенты \( a \) и \( b \) определяются на основе данных с использованием методов наименьших квадратов.

## Графическое представление

Графически линейная регрессия представляется в виде прямой линии на двумерной плоскости, где по оси X откладываются значения независимой переменной, а по оси Y — значения зависимой переменной. 

- **Точки данных**: Каждая точка на графике представляет собой наблюдение, где координаты точки соответствуют значениям независимой и зависимой переменных.
- **Линия регрессии**: Прямая линия, которая наилучшим образом описывает зависимость между переменными, минимизируя сумму квадратов вертикальных расстояний (ошибок) от точек данных до линии.

Пример графического представления:

```plaintext
Y
|
|          *
|       *
|    *
| *
|________________ X
```

В этом графике звёздочки (*) представляют собой наблюдения, а линия регрессии (не показана) будет проходить через точки, минимизируя расстояния до них.
2024-11-06 22:44:55.980 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=2
2024-11-06 22:44:55.980 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Методы оценки линейной регрессии\': [\'Метод наименьших квадратов\', \'Оценка коэффициентов регрессии\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:45:05.136 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:45:05.140 | INFO     | __main__:_act:84 - # Методы оценки линейной регрессии

## Метод наименьших квадратов

Метод наименьших квадратов (МНК) — это статистический метод, используемый для оценки коэффициентов линейной регрессии. Основная идея заключается в минимизации суммы квадратов разностей между наблюдаемыми значениями и предсказанными значениями модели.

### Принцип работы

1. **Формулировка задачи**: Пусть у нас есть набор данных, состоящий из пар значений \((x_i, y_i)\), где \(x_i\) — независимая переменная, а \(y_i\) — зависимая переменная.
2. **Модель**: Мы предполагаем, что зависимость между \(x\) и \(y\) можно описать линейной моделью:
   \[
   y = \beta_0 + \beta_1 x + \epsilon
   \]
   где \(\beta_0\) и \(\beta_1\) — коэффициенты регрессии, а \(\epsilon\) — ошибка.
3. **Цель**: Найти такие значения \(\beta_0\) и \(\beta_1\), которые минимизируют сумму квадратов ошибок:
   \[
   S = \sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i))^2
   \]

### Решение

Для нахождения коэффициентов \(\beta_0\) и \(\beta_1\) можно использовать следующие формулы:

\[
\beta_1 = \frac{n(\sum x_i y_i) - (\sum x_i)(\sum y_i)}{n(\sum x_i^2) - (\sum x_i)^2}
\]

\[
\beta_0 = \bar{y} - \beta_1 \bar{x}
\]

где \(\bar{x}\) и \(\bar{y}\) — средние значения \(x\) и \(y\) соответственно.

## Оценка коэффициентов регрессии

После применения метода наименьших квадратов мы получаем оцененные коэффициенты \(\hat{\beta_0}\) и \(\hat{\beta_1}\). Эти коэффициенты позволяют нам делать предсказания на основе модели.

### Интерпретация коэффициентов

- **\(\hat{\beta_0}\)**: Это значение \(y\), когда \(x = 0\). Оно представляет собой пересечение линии регрессии с осью \(y\).
- **\(\hat{\beta_1}\)**: Это изменение в \(y\) при увеличении \(x\) на единицу. Он показывает, насколько изменится зависимая переменная при изменении независимой переменной.

### Пример кода

```python
import numpy as np
import statsmodels.api as sm

# Данные
x = np.array([1, 2, 3, 4, 5])
y = np.array([2, 3, 5, 7, 11])

# Добавление константы для свободного члена
x = sm.add_constant(x)

# Модель линейной регрессии
model = sm.OLS(y, x).fit()

# Вывод результатов
print(model.summary())
```

В этом примере мы используем библиотеку `statsmodels` для оценки линейной регрессии. Мы создаем модель, используя метод наименьших квадратов, и выводим сводку результатов, включая оцененные коэффициенты.
2024-11-06 22:45:05.152 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=3
2024-11-06 22:45:05.153 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Проверка модели линейной регрессии\': [\'Критерии качества модели\', \'Проверка предположений\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:45:11.799 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:45:11.803 | INFO     | __main__:_act:84 - # Проверка модели линейной регрессии

## Критерии качества модели

При оценке качества модели линейной регрессии используются несколько ключевых критериев:

1. **Коэффициент детерминации (R²)**:
   - R² измеряет долю вариации зависимой переменной, объясняемую независимыми переменными. Значение R² варьируется от 0 до 1, где 1 указывает на идеальное соответствие модели данным.

2. **Средняя абсолютная ошибка (MAE)**:
   - MAE измеряет среднюю величину ошибок в предсказаниях, без учета направления. Это среднее значение абсолютных ошибок между предсказанными и фактическими значениями.

3. **Среднеквадратичная ошибка (MSE)**:
   - MSE измеряет среднюю квадратную ошибку между предсказанными и фактическими значениями. Это значение более чувствительно к выбросам, чем MAE.

4. **Корень среднеквадратичной ошибки (RMSE)**:
   - RMSE является квадратным корнем из MSE и предоставляет ошибку в тех же единицах, что и зависимая переменная.

5. **F-статистика**:
   - F-статистика используется для проверки общей значимости модели. Она сравнивает модель с предсказанием, основанным на среднем значении зависимой переменной.

## Проверка предположений

Для корректного применения линейной регрессии необходимо проверить несколько предположений:

1. **Линейность**:
   - Отношение между независимыми и зависимой переменной должно быть линейным. Это можно проверить с помощью графиков рассеяния.

2. **Нормальность остатков**:
   - Остатки (разности между предсказанными и фактическими значениями) должны быть нормально распределены. Это можно проверить с помощью теста Шапиро-Уилка или графика Q-Q.

3. **Гомоскедастичность**:
   - Остатки должны иметь постоянную дисперсию. Это можно проверить с помощью графиков остатков против предсказанных значений.

4. **Независимость остатков**:
   - Остатки должны быть независимыми. Это предположение можно проверить с помощью теста Дарбина-Уотсона.

5. **Отсутствие мультиколлинеарности**:
   - Независимые переменные не должны быть сильно коррелированы друг с другом. Это можно проверить с помощью коэффициента вариации инфляции (VIF).
2024-11-06 22:45:11.813 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=4
2024-11-06 22:45:11.813 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Применение линейной регрессии\': [\'Примеры использования\', \'Преимущества и недостатки\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:45:19.882 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:45:19.893 | INFO     | __main__:_act:84 - # Применение линейной регрессии

## Примеры использования

Линейная регрессия широко используется в различных областях для анализа и предсказания данных. Вот несколько примеров:

1. **Экономика**: Используется для прогнозирования цен на жилье на основе различных факторов, таких как площадь, количество комнат и местоположение.
   
2. **Маркетинг**: Помогает в оценке влияния рекламных расходов на продажи. Например, можно проанализировать, как увеличение бюджета на рекламу влияет на объем продаж.

3. **Медицина**: Применяется для предсказания уровня холестерина у пациентов на основе их возраста, веса и других факторов здоровья.

4. **Спорт**: Используется для анализа производительности спортсменов, например, для предсказания результатов на основе предыдущих выступлений.

5. **Научные исследования**: Применяется для анализа экспериментальных данных и выявления зависимостей между переменными.

## Преимущества и недостатки

### Преимущества

- **Простота**: Линейная регрессия проста в понимании и реализации, что делает её доступной для широкого круга пользователей.
  
- **Интерпретируемость**: Модели линейной регрессии легко интерпретировать, так как коэффициенты показывают, как изменение независимой переменной влияет на зависимую.

- **Быстрота**: Обучение модели линейной регрессии требует относительно небольших вычислительных ресурсов и времени.

- **Эффективность**: В случае линейных зависимостей, линейная регрессия может давать очень точные прогнозы.

### Недостатки

- **Линейность**: Линейная регрессия предполагает линейную зависимость между переменными, что не всегда соответствует реальности.

- **Чувствительность к выбросам**: Модель может быть сильно искажена выбросами, что может привести к неверным выводам.

- **Мультиколлинеарность**: Если независимые переменные сильно коррелируют друг с другом, это может привести к нестабильности коэффициентов модели.

- **Ограниченная предсказательная способность**: Линейная регрессия может не справляться с сложными зависимостями и нелинейными отношениями между переменными.
2024-11-06 22:45:19.902 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=5
2024-11-06 22:45:19.903 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Заключение\': [\'Резюме\', \'Будущее линейной регрессии\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:45:32.391 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:45:32.394 | INFO     | __main__:_act:84 - # Заключение

## Резюме

Линейная регрессия — это статистический метод, используемый для моделирования отношений между зависимой переменной и одной или несколькими независимыми переменными. Этот метод позволяет предсказывать значения зависимой переменной на основе значений независимых переменных. Линейная регрессия основывается на предположении о линейной зависимости между переменными, что делает её простым и эффективным инструментом для анализа данных.

Основные этапы линейной регрессии включают:

1. **Сбор данных**: Необходимо собрать данные, которые будут использоваться для построения модели.
2. **Предварительная обработка данных**: Данные могут потребовать очистки и преобразования для устранения выбросов и пропусков.
3. **Построение модели**: Используя метод наименьших квадратов, модель линейной регрессии вычисляет коэффициенты, которые минимизируют сумму квадратов ошибок между предсказанными и фактическими значениями.
4. **Оценка модели**: Модель оценивается с использованием различных метрик, таких как R-квадрат, средняя абсолютная ошибка и другие.
5. **Прогнозирование**: После оценки модель может быть использована для прогнозирования значений зависимой переменной на основе новых данных.

## Будущее линейной регрессии

Линейная регрессия продолжает оставаться важным инструментом в области анализа данных и машинного обучения. Несмотря на появление более сложных моделей, таких как деревья решений и нейронные сети, линейная регрессия сохраняет свою актуальность благодаря своей простоте и интерпретируемости.

В будущем можно ожидать:

- **Интеграция с большими данными**: Линейная регрессия будет использоваться в сочетании с технологиями больших данных для анализа больших объемов информации.
- **Улучшение алгоритмов**: Разработка новых алгоритмов, которые могут улучшить точность линейной регрессии, особенно в условиях многомерных данных.
- **Применение в реальном времени**: Линейная регрессия будет все чаще использоваться для анализа данных в реальном времени, что позволит принимать более обоснованные решения на основе актуальной информации.

Таким образом, линейная регрессия останется важным инструментом в арсенале аналитиков и исследователей, обеспечивая простоту и эффективность в анализе данных.
2024-11-06 22:45:32.400 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:45:32.401 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:45:32.425 | ERROR    | __main__:react:93 - [Errno 22] Invalid argument: 'D:\\danila_prj_my\\meta-gpt\\data\\tutorial_docx\\2024-11-06_22-45-32\\Что такое линейная регрессия?.md': , 
Calling write with args: (<class 'metagpt.utils.file.File'>, WindowsPath('D:/danila_prj_my/meta-gpt/data/tutorial_docx/2024-11-06_22-45-32'), 'Что такое линейная регрессия?.md', b'# \xd0\xa7\xd1\x82\xd0\xbe \xd1\x82\xd0\xb0\xd0\xba\xd0\xbe\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f?\n\n\n# \xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x83\xd1\x8e \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8e\n\n## \xd0\x9e\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xe2\x80\x94 \xd1\x8d\xd1\x82\xd0\xbe \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4, \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbe\xd1\x82\xd0\xbd\xd0\xbe\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8 \xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8\xd0\xbb\xd0\xb8 \xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8. \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x86\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb7\xd0\xb0\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2 \xd1\x82\xd0\xbe\xd0\xbc, \xd1\x87\xd1\x82\xd0\xbe\xd0\xb1\xd1\x8b \xd0\xbd\xd0\xb0\xd0\xb9\xd1\x82\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x83\xd1\x8e \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0\xd1\x8f \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbb\xd1\x83\xd1\x87\xd1\x88\xd0\xb8\xd0\xbc \xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd0\xb7\xd0\xbe\xd0\xbc \xd0\xbe\xd0\xbf\xd0\xb8\xd1\x81\xd1\x8b\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5.\n\n\xd0\xa4\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe, \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0 \xd1\x83\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5\xd0\xbc:\n\n\\[ Y = \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + ... + \\beta_n X_n + \\epsilon \\]\n\n\xd0\xb3\xd0\xb4\xd0\xb5:\n- \\( Y \\) \xe2\x80\x94 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f,\n- \\( \\beta_0 \\) \xe2\x80\x94 \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x87\xd0\xbb\xd0\xb5\xd0\xbd (\xd0\xba\xd0\xbe\xd0\xbd\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd1\x82\xd0\xb0),\n- \\( \\beta_1, \\beta_2, ..., \\beta_n \\) \xe2\x80\x94 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8,\n- \\( X_1, X_2, ..., X_n \\) \xe2\x80\x94 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xb5 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5,\n- \\( \\epsilon \\) \xe2\x80\x94 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb0 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8.\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd0\xb9 (\xd0\xbe\xd0\xb4\xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f) \xd0\xb8\xd0\xbb\xd0\xb8 \xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 (\xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xbe \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85).\n\n## \xd0\x98\xd1\x81\xd1\x82\xd0\xbe\xd1\x80\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xb8\xd0\xbc\xd0\xb5\xd0\xb5\xd1\x82 \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb3\xd1\x83\xd1\x8e \xd0\xb8\xd1\x81\xd1\x82\xd0\xbe\xd1\x80\xd0\xb8\xd1\x8e, \xd0\xbd\xd0\xb0\xd1\x87\xd0\xb8\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x81 19 \xd0\xb2\xd0\xb5\xd0\xba\xd0\xb0. \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x8d\xd1\x82\xd0\xb0\xd0\xbf\xd1\x8b \xd0\xb5\xd1\x91 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xb2\xd0\xb8\xd1\x82\xd0\xb8\xd1\x8f:\n\n1. **\xd0\xa4\xd1\x80\xd0\xb0\xd0\xbd\xd1\x81\xd0\xb8\xd1\x81 \xd0\x93\xd0\xb0\xd0\xbb\xd1\x8c\xd1\x82\xd0\xbe\xd0\xbd (1885)**: \xd0\x93\xd0\xb0\xd0\xbb\xd1\x8c\xd1\x82\xd0\xbe\xd0\xbd \xd0\xb2\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb2\xd1\x8b\xd0\xb5 \xd0\xb2\xd0\xb2\xd0\xb5\xd0\xbb \xd0\xba\xd0\xbe\xd0\xbd\xd1\x86\xd0\xb5\xd0\xbf\xd1\x86\xd0\xb8\xd1\x8e \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8, \xd0\xb8\xd1\x81\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8f \xd1\x81\xd0\xb2\xd1\x8f\xd0\xb7\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd0\xbc \xd1\x80\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9 \xd0\xb8 \xd0\xb4\xd0\xb5\xd1\x82\xd0\xb5\xd0\xb9. \xd0\x9e\xd0\xbd \xd0\xb7\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x82\xd0\xb8\xd0\xbb, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb4\xd0\xb5\xd1\x82\xd0\xb8, \xd0\xba\xd0\xb0\xd0\xba \xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xb8\xd0\xbb\xd0\xbe, \xd0\xb8\xd0\xbc\xd0\xb5\xd1\x8e\xd1\x82 \xd1\x80\xd0\xbe\xd1\x81\xd1\x82, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 "\xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd1\x82" \xd0\xba \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb5\xd0\xbc\xd1\x83 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8e.\n\n2. **\xd0\x9a\xd0\xb0\xd1\x80\xd0\xbb \xd0\x9f\xd0\xb8\xd1\x80\xd1\x81\xd0\xbe\xd0\xbd (1896)**: \xd0\x9f\xd0\xb8\xd1\x80\xd1\x81\xd0\xbe\xd0\xbd \xd1\x80\xd0\xb0\xd0\xb7\xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0\xd0\xbb \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 \xd1\x81\xd1\x82\xd0\xb0\xd0\xbb \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8. \xd0\x9e\xd0\xbd \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb8\xd0\xbb \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd1\x8d\xd1\x82\xd0\xbe\xd1\x82 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbd\xd0\xb0\xd1\x85\xd0\xbe\xd0\xb6\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xb8, \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb8\xd1\x80\xd1\x83\xd1\x8e\xd1\x89\xd0\xb5\xd0\xb9 \xd1\x81\xd1\x83\xd0\xbc\xd0\xbc\xd1\x83 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbe\xd1\x82\xd0\xba\xd0\xbb\xd0\xbe\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbd\xd0\xb0\xd0\xb1\xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8.\n\n3. **\xd0\xa0\xd0\xb0\xd0\xb7\xd0\xb2\xd0\xb8\xd1\x82\xd0\xb8\xd0\xb5 \xd0\xb2 20 \xd0\xb2\xd0\xb5\xd0\xba\xd0\xb5**: \xd0\x92 20 \xd0\xb2\xd0\xb5\xd0\xba\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd1\x81\xd1\x82\xd0\xb0\xd0\xbb\xd0\xb0 \xd1\x88\xd0\xb8\xd1\x80\xd0\xbe\xd0\xba\xd0\xbe \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xb2 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbe\xd0\xb1\xd0\xbb\xd0\xb0\xd1\x81\xd1\x82\xd1\x8f\xd1\x85, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb0\xd0\xba \xd1\x8d\xd0\xba\xd0\xbe\xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb8\xd0\xba\xd0\xb0, \xd0\xb1\xd0\xb8\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x8f \xd0\xb8 \xd1\x81\xd0\xbe\xd1\x86\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbd\xd0\xb0\xd1\x83\xd0\xba\xd0\xb8. \xd0\x9f\xd0\xbe\xd1\x8f\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2\xd1\x8b\xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd0\xb9 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd1\x83\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8\xd0\xbb\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8.\n\n4. **\xd0\xa1\xd0\xbe\xd0\xb2\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbf\xd0\xbe\xd0\xb4\xd1\x85\xd0\xbe\xd0\xb4\xd1\x8b**: \xd0\xa1 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xb2\xd0\xb8\xd1\x82\xd0\xb8\xd0\xb5\xd0\xbc \xd0\xbc\xd0\xb0\xd1\x88\xd0\xb8\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb8 \xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xb2\xd0\xb0\xd0\xb6\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xb8\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xbc \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb8 \xd0\xbf\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9.\n\n\n# \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xba\xd0\xbe\xd0\xbd\xd1\x86\xd0\xb5\xd0\xbf\xd1\x86\xd0\xb8\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n## \xd0\x97\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5\n\n\xd0\x92 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb0\xd1\x8e\xd1\x82 \xd0\xb4\xd0\xb2\xd0\xb5 \xd0\xba\xd0\xb0\xd1\x82\xd0\xb5\xd0\xb3\xd0\xbe\xd1\x80\xd0\xb8\xd0\xb8 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85:\n\n- **\xd0\x97\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f (Y)**: \xd0\xad\xd1\x82\xd0\xbe \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x83\xd1\x8e \xd0\xbc\xd1\x8b \xd0\xbf\xd1\x8b\xd1\x82\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x81\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x82\xd1\x8c \xd0\xb8\xd0\xbb\xd0\xb8 \xd0\xbe\xd0\xb1\xd1\x8a\xd1\x8f\xd1\x81\xd0\xbd\xd0\xb8\xd1\x82\xd1\x8c. \xd0\x9e\xd0\xbd\xd0\xb0 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd1\x82 \xd0\xbe\xd1\x82 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.\n  \n- **\xd0\x9d\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f (X)**: \xd0\xad\xd1\x82\xd0\xbe \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0\xd1\x8f \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9. \xd0\x9e\xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb5 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd1\x82 \xd0\xbe\xd1\x82 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xb8\xd1\x85 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb2 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8.\n\n\xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80: \xd0\x95\xd1\x81\xd0\xbb\xd0\xb8 \xd0\xbc\xd1\x8b \xd1\x85\xd0\xbe\xd1\x82\xd0\xb8\xd0\xbc \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x82\xd1\x8c \xd1\x86\xd0\xb5\xd0\xbd\xd1\x83 \xd0\xb4\xd0\xbe\xd0\xbc\xd0\xb0 (Y) \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xb5\xd0\xb3\xd0\xbe \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd0\xb8 (X), \xd1\x82\xd0\xbe \xd1\x86\xd0\xb5\xd0\xbd\xd0\xb0 \xd0\xb4\xd0\xbe\xd0\xbc\xd0\xb0 \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9, \xd0\xb0 \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c \xe2\x80\x94 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9.\n\n## \xd0\xa3\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n\xd0\xa3\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xbe\xd0\xbf\xd0\xb8\xd1\x81\xd1\x8b\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x83\xd1\x8e \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8. \xd0\x9e\xd0\xbd\xd0\xbe \xd0\xb8\xd0\xbc\xd0\xb5\xd0\xb5\xd1\x82 \xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8e\xd1\x89\xd0\xb8\xd0\xb9 \xd0\xb2\xd0\xb8\xd0\xb4:\n\n\\[ Y = a + bX \\]\n\n\xd0\xb3\xd0\xb4\xd0\xb5:\n- \\( Y \\) \xe2\x80\x94 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f,\n- \\( a \\) \xe2\x80\x94 \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x87\xd0\xbb\xd0\xb5\xd0\xbd (\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd1\x81\xd0\xb5\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd1\x81 \xd0\xbe\xd1\x81\xd1\x8c\xd1\x8e Y),\n- \\( b \\) \xe2\x80\x94 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82 \xd0\xbd\xd0\xb0\xd0\xba\xd0\xbb\xd0\xbe\xd0\xbd\xd0\xb0 (\xd0\xbf\xd0\xbe\xd0\xba\xd0\xb0\xd0\xb7\xd1\x8b\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82, \xd0\xba\xd0\xb0\xd0\xba \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f Y \xd0\xbf\xd1\x80\xd0\xb8 \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb8 X),\n- \\( X \\) \xe2\x80\x94 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f.\n\n\xd0\x9a\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b \\( a \\) \xd0\xb8 \\( b \\) \xd0\xbe\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8f\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x81 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5\xd0\xbc \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xb2 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2.\n\n## \xd0\x93\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5\n\n\xd0\x93\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2 \xd0\xb2\xd0\xb8\xd0\xb4\xd0\xb5 \xd0\xbf\xd1\x80\xd1\x8f\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xb8 \xd0\xbd\xd0\xb0 \xd0\xb4\xd0\xb2\xd1\x83\xd0\xbc\xd0\xb5\xd1\x80\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x81\xd0\xba\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8, \xd0\xb3\xd0\xb4\xd0\xb5 \xd0\xbf\xd0\xbe \xd0\xbe\xd1\x81\xd0\xb8 X \xd0\xbe\xd1\x82\xd0\xba\xd0\xbb\xd0\xb0\xd0\xb4\xd1\x8b\xd0\xb2\xd0\xb0\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9, \xd0\xb0 \xd0\xbf\xd0\xbe \xd0\xbe\xd1\x81\xd0\xb8 Y \xe2\x80\x94 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9. \n\n- **\xd0\xa2\xd0\xbe\xd1\x87\xd0\xba\xd0\xb8 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85**: \xd0\x9a\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xb0\xd1\x8f \xd1\x82\xd0\xbe\xd1\x87\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd0\xba\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd1\x81\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb9 \xd0\xbd\xd0\xb0\xd0\xb1\xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5, \xd0\xb3\xd0\xb4\xd0\xb5 \xd0\xba\xd0\xbe\xd0\xbe\xd1\x80\xd0\xb4\xd0\xb8\xd0\xbd\xd0\xb0\xd1\x82\xd1\x8b \xd1\x82\xd0\xbe\xd1\x87\xd0\xba\xd0\xb8 \xd1\x81\xd0\xbe\xd0\xbe\xd1\x82\xd0\xb2\xd0\xb5\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd1\x8e\xd1\x82 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xb8 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.\n- **\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8**: \xd0\x9f\xd1\x80\xd1\x8f\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb8\xd1\x8f, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0\xd1\x8f \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbb\xd1\x83\xd1\x87\xd1\x88\xd0\xb8\xd0\xbc \xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd0\xb7\xd0\xbe\xd0\xbc \xd0\xbe\xd0\xbf\xd0\xb8\xd1\x81\xd1\x8b\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8, \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb8\xd1\x80\xd1\x83\xd1\x8f \xd1\x81\xd1\x83\xd0\xbc\xd0\xbc\xd1\x83 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xb2\xd0\xb5\xd1\x80\xd1\x82\xd0\xb8\xd0\xba\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x80\xd0\xb0\xd1\x81\xd1\x81\xd1\x82\xd0\xbe\xd1\x8f\xd0\xbd\xd0\xb8\xd0\xb9 (\xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xbe\xd0\xba) \xd0\xbe\xd1\x82 \xd1\x82\xd0\xbe\xd1\x87\xd0\xb5\xd0\xba \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb4\xd0\xbe \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xb8.\n\n\xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80 \xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f:\n\n```plaintext\nY\n|\n|          *\n|       *\n|    *\n| *\n|________________ X\n```\n\n\xd0\x92 \xd1\x8d\xd1\x82\xd0\xbe\xd0\xbc \xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd0\xba\xd0\xb5 \xd0\xb7\xd0\xb2\xd1\x91\xd0\xb7\xd0\xb4\xd0\xbe\xd1\x87\xd0\xba\xd0\xb8 (*) \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd1\x8e\xd1\x82 \xd1\x81\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb9 \xd0\xbd\xd0\xb0\xd0\xb1\xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f, \xd0\xb0 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 (\xd0\xbd\xd0\xb5 \xd0\xbf\xd0\xbe\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb0) \xd0\xb1\xd1\x83\xd0\xb4\xd0\xb5\xd1\x82 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x82\xd1\x8c \xd1\x87\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb7 \xd1\x82\xd0\xbe\xd1\x87\xd0\xba\xd0\xb8, \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb8\xd1\x80\xd1\x83\xd1\x8f \xd1\x80\xd0\xb0\xd1\x81\xd1\x81\xd1\x82\xd0\xbe\xd1\x8f\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb4\xd0\xbe \xd0\xbd\xd0\xb8\xd1\x85.\n\n\n# \xd0\x9c\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd1\x8b \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n## \xd0\x9c\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\n\n\xd0\x9c\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 (\xd0\x9c\xd0\x9d\xd0\x9a) \xe2\x80\x94 \xd1\x8d\xd1\x82\xd0\xbe \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4, \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb8 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8. \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xb8\xd0\xb4\xd0\xb5\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2 \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 \xd1\x81\xd1\x83\xd0\xbc\xd0\xbc\xd1\x8b \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb5\xd0\xb9 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbd\xd0\xb0\xd0\xb1\xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8 \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8.\n\n### \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbd\xd1\x86\xd0\xb8\xd0\xbf \xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd1\x8b\n\n1. **\xd0\xa4\xd0\xbe\xd1\x80\xd0\xbc\xd1\x83\xd0\xbb\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xba\xd0\xb0 \xd0\xb7\xd0\xb0\xd0\xb4\xd0\xb0\xd1\x87\xd0\xb8**: \xd0\x9f\xd1\x83\xd1\x81\xd1\x82\xd1\x8c \xd1\x83 \xd0\xbd\xd0\xb0\xd1\x81 \xd0\xb5\xd1\x81\xd1\x82\xd1\x8c \xd0\xbd\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x80 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85, \xd1\x81\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x8f\xd1\x89\xd0\xb8\xd0\xb9 \xd0\xb8\xd0\xb7 \xd0\xbf\xd0\xb0\xd1\x80 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \\((x_i, y_i)\\), \xd0\xb3\xd0\xb4\xd0\xb5 \\(x_i\\) \xe2\x80\x94 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f, \xd0\xb0 \\(y_i\\) \xe2\x80\x94 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f.\n2. **\xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c**: \xd0\x9c\xd1\x8b \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd0\xbc, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \\(x\\) \xd0\xb8 \\(y\\) \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbe\xd0\xbf\xd0\xb8\xd1\x81\xd0\xb0\xd1\x82\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x8e:\n   \\[\n   y = \\beta_0 + \\beta_1 x + \\epsilon\n   \\]\n   \xd0\xb3\xd0\xb4\xd0\xb5 \\(\\beta_0\\) \xd0\xb8 \\(\\beta_1\\) \xe2\x80\x94 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8, \xd0\xb0 \\(\\epsilon\\) \xe2\x80\x94 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb0.\n3. **\xd0\xa6\xd0\xb5\xd0\xbb\xd1\x8c**: \xd0\x9d\xd0\xb0\xd0\xb9\xd1\x82\xd0\xb8 \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \\(\\beta_0\\) \xd0\xb8 \\(\\beta_1\\), \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb5 \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb8\xd1\x80\xd1\x83\xd1\x8e\xd1\x82 \xd1\x81\xd1\x83\xd0\xbc\xd0\xbc\xd1\x83 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xbe\xd0\xba:\n   \\[\n   S = \\sum_{i=1}^{n} (y_i - (\\beta_0 + \\beta_1 x_i))^2\n   \\]\n\n### \xd0\xa0\xd0\xb5\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5\n\n\xd0\x94\xd0\xbb\xd1\x8f \xd0\xbd\xd0\xb0\xd1\x85\xd0\xbe\xd0\xb6\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xb2 \\(\\beta_0\\) \xd0\xb8 \\(\\beta_1\\) \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8e\xd1\x89\xd0\xb8\xd0\xb5 \xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd1\x83\xd0\xbb\xd1\x8b:\n\n\\[\n\\beta_1 = \\frac{n(\\sum x_i y_i) - (\\sum x_i)(\\sum y_i)}{n(\\sum x_i^2) - (\\sum x_i)^2}\n\\]\n\n\\[\n\\beta_0 = \\bar{y} - \\beta_1 \\bar{x}\n\\]\n\n\xd0\xb3\xd0\xb4\xd0\xb5 \\(\\bar{x}\\) \xd0\xb8 \\(\\bar{y}\\) \xe2\x80\x94 \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \\(x\\) \xd0\xb8 \\(y\\) \xd1\x81\xd0\xbe\xd0\xbe\xd1\x82\xd0\xb2\xd0\xb5\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe.\n\n## \xd0\x9e\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb0 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xb2 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n\xd0\x9f\xd0\xbe\xd1\x81\xd0\xbb\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd0\xb0 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbc\xd1\x8b \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x83\xd1\x87\xd0\xb0\xd0\xb5\xd0\xbc \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b \\(\\hat{\\beta_0}\\) \xd0\xb8 \\(\\hat{\\beta_1}\\). \xd0\xad\xd1\x82\xd0\xb8 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b \xd0\xbf\xd0\xbe\xd0\xb7\xd0\xb2\xd0\xbe\xd0\xbb\xd1\x8f\xd1\x8e\xd1\x82 \xd0\xbd\xd0\xb0\xd0\xbc \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb0\xd1\x82\xd1\x8c \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8.\n\n### \xd0\x98\xd0\xbd\xd1\x82\xd0\xb5\xd1\x80\xd0\xbf\xd1\x80\xd0\xb5\xd1\x82\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xb2\n\n- **\\(\\hat{\\beta_0}\\)**: \xd0\xad\xd1\x82\xd0\xbe \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \\(y\\), \xd0\xba\xd0\xbe\xd0\xb3\xd0\xb4\xd0\xb0 \\(x = 0\\). \xd0\x9e\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd1\x81\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd1\x81\xd0\xb5\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xb8 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd1\x81 \xd0\xbe\xd1\x81\xd1\x8c\xd1\x8e \\(y\\).\n- **\\(\\hat{\\beta_1}\\)**: \xd0\xad\xd1\x82\xd0\xbe \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \\(y\\) \xd0\xbf\xd1\x80\xd0\xb8 \xd1\x83\xd0\xb2\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb8 \\(x\\) \xd0\xbd\xd0\xb0 \xd0\xb5\xd0\xb4\xd0\xb8\xd0\xbd\xd0\xb8\xd1\x86\xd1\x83. \xd0\x9e\xd0\xbd \xd0\xbf\xd0\xbe\xd0\xba\xd0\xb0\xd0\xb7\xd1\x8b\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82, \xd0\xbd\xd0\xb0\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xbe \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x82\xd1\x81\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb8 \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9.\n\n### \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80 \xd0\xba\xd0\xbe\xd0\xb4\xd0\xb0\n\n```python\nimport numpy as np\nimport statsmodels.api as sm\n\n# \xd0\x94\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5\nx = np.array([1, 2, 3, 4, 5])\ny = np.array([2, 3, 5, 7, 11])\n\n# \xd0\x94\xd0\xbe\xd0\xb1\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xba\xd0\xbe\xd0\xbd\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd1\x82\xd1\x8b \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd1\x87\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0\nx = sm.add_constant(x)\n\n# \xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\nmodel = sm.OLS(y, x).fit()\n\n# \xd0\x92\xd1\x8b\xd0\xb2\xd0\xbe\xd0\xb4 \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\nprint(model.summary())\n```\n\n\xd0\x92 \xd1\x8d\xd1\x82\xd0\xbe\xd0\xbc \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80\xd0\xb5 \xd0\xbc\xd1\x8b \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd0\xbc \xd0\xb1\xd0\xb8\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xbe\xd1\x82\xd0\xb5\xd0\xba\xd1\x83 `statsmodels` \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8. \xd0\x9c\xd1\x8b \xd1\x81\xd0\xbe\xd0\xb7\xd0\xb4\xd0\xb0\xd0\xb5\xd0\xbc \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c, \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd1\x8f \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2, \xd0\xb8 \xd0\xb2\xd1\x8b\xd0\xb2\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb4\xd0\xba\xd1\x83 \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2, \xd0\xb2\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb0\xd1\x8f \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b.\n\n\n# \xd0\x9f\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd0\xba\xd0\xb0 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n## \xd0\x9a\xd1\x80\xd0\xb8\xd1\x82\xd0\xb5\xd1\x80\xd0\xb8\xd0\xb8 \xd0\xba\xd0\xb0\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\n\n\xd0\x9f\xd1\x80\xd0\xb8 \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb5 \xd0\xba\xd0\xb0\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xbe \xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb5\xd0\xb2\xd1\x8b\xd1\x85 \xd0\xba\xd1\x80\xd0\xb8\xd1\x82\xd0\xb5\xd1\x80\xd0\xb8\xd0\xb5\xd0\xb2:\n\n1. **\xd0\x9a\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82 \xd0\xb4\xd0\xb5\xd1\x82\xd0\xb5\xd1\x80\xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 (R\xc2\xb2)**:\n   - R\xc2\xb2 \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd1\x80\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xb4\xd0\xbe\xd0\xbb\xd1\x8e \xd0\xb2\xd0\xb0\xd1\x80\xd0\xb8\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9, \xd0\xbe\xd0\xb1\xd1\x8a\xd1\x8f\xd1\x81\xd0\xbd\xd1\x8f\xd0\xb5\xd0\xbc\xd1\x83\xd1\x8e \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8. \xd0\x97\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 R\xc2\xb2 \xd0\xb2\xd0\xb0\xd1\x80\xd1\x8c\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xbe\xd1\x82 0 \xd0\xb4\xd0\xbe 1, \xd0\xb3\xd0\xb4\xd0\xb5 1 \xd1\x83\xd0\xba\xd0\xb0\xd0\xb7\xd1\x8b\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbd\xd0\xb0 \xd0\xb8\xd0\xb4\xd0\xb5\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb5 \xd1\x81\xd0\xbe\xd0\xbe\xd1\x82\xd0\xb2\xd0\xb5\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc.\n\n2. **\xd0\xa1\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd1\x8f\xd1\x8f \xd0\xb0\xd0\xb1\xd1\x81\xd0\xbe\xd0\xbb\xd1\x8e\xd1\x82\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb0 (MAE)**:\n   - MAE \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd1\x80\xd1\x8f\xd0\xb5\xd1\x82 \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd1\x8e\xd1\x8e \xd0\xb2\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb8\xd0\xbd\xd1\x83 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xbe\xd0\xba \xd0\xb2 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f\xd1\x85, \xd0\xb1\xd0\xb5\xd0\xb7 \xd1\x83\xd1\x87\xd0\xb5\xd1\x82\xd0\xb0 \xd0\xbd\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f. \xd0\xad\xd1\x82\xd0\xbe \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb5\xd0\xb5 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb0\xd0\xb1\xd1\x81\xd0\xbe\xd0\xbb\xd1\x8e\xd1\x82\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xbe\xd0\xba \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb8 \xd1\x84\xd0\xb0\xd0\xba\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8.\n\n3. **\xd0\xa1\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb5\xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xb8\xd1\x87\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb0 (MSE)**:\n   - MSE \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd1\x80\xd1\x8f\xd0\xb5\xd1\x82 \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd1\x8e\xd1\x8e \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbd\xd1\x83\xd1\x8e \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd1\x83 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb8 \xd1\x84\xd0\xb0\xd0\xba\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8. \xd0\xad\xd1\x82\xd0\xbe \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb1\xd0\xbe\xd0\xbb\xd0\xb5\xd0\xb5 \xd1\x87\xd1\x83\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd0\xba \xd0\xb2\xd1\x8b\xd0\xb1\xd1\x80\xd0\xbe\xd1\x81\xd0\xb0\xd0\xbc, \xd1\x87\xd0\xb5\xd0\xbc MAE.\n\n4. **\xd0\x9a\xd0\xbe\xd1\x80\xd0\xb5\xd0\xbd\xd1\x8c \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb5\xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xb8\xd1\x87\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb8 (RMSE)**:\n   - RMSE \xd1\x8f\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xba\xd0\xbe\xd1\x80\xd0\xbd\xd0\xb5\xd0\xbc \xd0\xb8\xd0\xb7 MSE \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd1\x83 \xd0\xb2 \xd1\x82\xd0\xb5\xd1\x85 \xd0\xb6\xd0\xb5 \xd0\xb5\xd0\xb4\xd0\xb8\xd0\xbd\xd0\xb8\xd1\x86\xd0\xb0\xd1\x85, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb8 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f.\n\n5. **F-\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd0\xba\xd0\xb0**:\n   - F-\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd0\xba\xd0\xb0 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd0\xba\xd0\xb8 \xd0\xbe\xd0\xb1\xd1\x89\xd0\xb5\xd0\xb9 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8. \xd0\x9e\xd0\xbd\xd0\xb0 \xd1\x81\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb8\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd1\x81 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5\xd0\xbc, \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xbd\xd0\xb0 \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb5\xd0\xbc \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb8 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9.\n\n## \xd0\x9f\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd0\xba\xd0\xb0 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9\n\n\xd0\x94\xd0\xbb\xd1\x8f \xd0\xba\xd0\xbe\xd1\x80\xd1\x80\xd0\xb5\xd0\xba\xd1\x82\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x82\xd1\x8c \xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9:\n\n1. **\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**:\n   - \xd0\x9e\xd1\x82\xd0\xbd\xd0\xbe\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb8 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x8b\xd0\xbc. \xd0\xad\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x82\xd1\x8c \xd1\x81 \xd0\xbf\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x89\xd1\x8c\xd1\x8e \xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2 \xd1\x80\xd0\xb0\xd1\x81\xd1\x81\xd0\xb5\xd1\x8f\xd0\xbd\xd0\xb8\xd1\x8f.\n\n2. **\xd0\x9d\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xbe\xd0\xb2**:\n   - \xd0\x9e\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xb8 (\xd1\x80\xd0\xb0\xd0\xb7\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb8 \xd1\x84\xd0\xb0\xd0\xba\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8) \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xbd\xd1\x8b \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xbd\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd1\x80\xd0\xb0\xd1\x81\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xbd\xd1\x8b. \xd0\xad\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x82\xd1\x8c \xd1\x81 \xd0\xbf\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x89\xd1\x8c\xd1\x8e \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb0 \xd0\xa8\xd0\xb0\xd0\xbf\xd0\xb8\xd1\x80\xd0\xbe-\xd0\xa3\xd0\xb8\xd0\xbb\xd0\xba\xd0\xb0 \xd0\xb8\xd0\xbb\xd0\xb8 \xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd0\xba\xd0\xb0 Q-Q.\n\n3. **\xd0\x93\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x81\xd0\xba\xd0\xb5\xd0\xb4\xd0\xb0\xd1\x81\xd1\x82\xd0\xb8\xd1\x87\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**:\n   - \xd0\x9e\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xb8 \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xbd\xd1\x8b \xd0\xb8\xd0\xbc\xd0\xb5\xd1\x82\xd1\x8c \xd0\xbf\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x8f\xd0\xbd\xd0\xbd\xd1\x83\xd1\x8e \xd0\xb4\xd0\xb8\xd1\x81\xd0\xbf\xd0\xb5\xd1\x80\xd1\x81\xd0\xb8\xd1\x8e. \xd0\xad\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x82\xd1\x8c \xd1\x81 \xd0\xbf\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x89\xd1\x8c\xd1\x8e \xd0\xb3\xd1\x80\xd0\xb0\xd1\x84\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2 \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xbe\xd0\xb2 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x82\xd0\xb8\xd0\xb2 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9.\n\n4. **\xd0\x9d\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xbe\xd0\xb2**:\n   - \xd0\x9e\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xb8 \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xbd\xd1\x8b \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8. \xd0\xad\xd1\x82\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x82\xd1\x8c \xd1\x81 \xd0\xbf\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x89\xd1\x8c\xd1\x8e \xd1\x82\xd0\xb5\xd1\x81\xd1\x82\xd0\xb0 \xd0\x94\xd0\xb0\xd1\x80\xd0\xb1\xd0\xb8\xd0\xbd\xd0\xb0-\xd0\xa3\xd0\xbe\xd1\x82\xd1\x81\xd0\xbe\xd0\xbd\xd0\xb0.\n\n5. **\xd0\x9e\xd1\x82\xd1\x81\xd1\x83\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd0\xb8\xd0\xb5 \xd0\xbc\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb8\xd0\xba\xd0\xbe\xd0\xbb\xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb0\xd1\x80\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8**:\n   - \xd0\x9d\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xb5 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbd\xd0\xb5 \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xbd\xd1\x8b \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd1\x81\xd0\xb8\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd0\xba\xd0\xbe\xd1\x80\xd1\x80\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd1\x8b \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3 \xd1\x81 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbc. \xd0\xad\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb5\xd1\x80\xd0\xb8\xd1\x82\xd1\x8c \xd1\x81 \xd0\xbf\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x89\xd1\x8c\xd1\x8e \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb0 \xd0\xb2\xd0\xb0\xd1\x80\xd0\xb8\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 \xd0\xb8\xd0\xbd\xd1\x84\xd0\xbb\xd1\x8f\xd1\x86\xd0\xb8\xd0\xb8 (VIF).\n\n\n# \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n## \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80\xd1\x8b \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd1\x88\xd0\xb8\xd1\x80\xd0\xbe\xd0\xba\xd0\xbe \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbe\xd0\xb1\xd0\xbb\xd0\xb0\xd1\x81\xd1\x82\xd1\x8f\xd1\x85 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85. \xd0\x92\xd0\xbe\xd1\x82 \xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80\xd0\xbe\xd0\xb2:\n\n1. **\xd0\xad\xd0\xba\xd0\xbe\xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb8\xd0\xba\xd0\xb0**: \xd0\x98\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd0\xbd\xd0\xbe\xd0\xb7\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd1\x86\xd0\xb5\xd0\xbd \xd0\xbd\xd0\xb0 \xd0\xb6\xd0\xb8\xd0\xbb\xd1\x8c\xd0\xb5 \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x84\xd0\xb0\xd0\xba\xd1\x82\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb2, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb0\xd0\xba \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c, \xd0\xba\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xba\xd0\xbe\xd0\xbc\xd0\xbd\xd0\xb0\xd1\x82 \xd0\xb8 \xd0\xbc\xd0\xb5\xd1\x81\xd1\x82\xd0\xbe\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5.\n   \n2. **\xd0\x9c\xd0\xb0\xd1\x80\xd0\xba\xd0\xb5\xd1\x82\xd0\xb8\xd0\xbd\xd0\xb3**: \xd0\x9f\xd0\xbe\xd0\xbc\xd0\xbe\xd0\xb3\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xb2 \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb5 \xd0\xb2\xd0\xbb\xd0\xb8\xd1\x8f\xd0\xbd\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb5\xd0\xba\xd0\xbb\xd0\xb0\xd0\xbc\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x80\xd0\xb0\xd1\x81\xd1\x85\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xb2 \xd0\xbd\xd0\xb0 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb4\xd0\xb0\xd0\xb6\xd0\xb8. \xd0\x9d\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80, \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c, \xd0\xba\xd0\xb0\xd0\xba \xd1\x83\xd0\xb2\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb1\xd1\x8e\xd0\xb4\xd0\xb6\xd0\xb5\xd1\x82\xd0\xb0 \xd0\xbd\xd0\xb0 \xd1\x80\xd0\xb5\xd0\xba\xd0\xbb\xd0\xb0\xd0\xbc\xd1\x83 \xd0\xb2\xd0\xbb\xd0\xb8\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xbd\xd0\xb0 \xd0\xbe\xd0\xb1\xd1\x8a\xd0\xb5\xd0\xbc \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb4\xd0\xb0\xd0\xb6.\n\n3. **\xd0\x9c\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x86\xd0\xb8\xd0\xbd\xd0\xb0**: \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd1\x83\xd1\x80\xd0\xbe\xd0\xb2\xd0\xbd\xd1\x8f \xd1\x85\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x81\xd1\x82\xd0\xb5\xd1\x80\xd0\xb8\xd0\xbd\xd0\xb0 \xd1\x83 \xd0\xbf\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xb8\xd1\x85 \xd0\xb2\xd0\xbe\xd0\xb7\xd1\x80\xd0\xb0\xd1\x81\xd1\x82\xd0\xb0, \xd0\xb2\xd0\xb5\xd1\x81\xd0\xb0 \xd0\xb8 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xb8\xd1\x85 \xd1\x84\xd0\xb0\xd0\xba\xd1\x82\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb2 \xd0\xb7\xd0\xb4\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb2\xd1\x8c\xd1\x8f.\n\n4. **\xd0\xa1\xd0\xbf\xd0\xbe\xd1\x80\xd1\x82**: \xd0\x98\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb8\xd0\xb7\xd0\xb2\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8 \xd1\x81\xd0\xbf\xd0\xbe\xd1\x80\xd1\x82\xd1\x81\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbe\xd0\xb2, \xd0\xbd\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80, \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x8b\xd0\xb4\xd1\x83\xd1\x89\xd0\xb8\xd1\x85 \xd0\xb2\xd1\x8b\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9.\n\n5. **\xd0\x9d\xd0\xb0\xd1\x83\xd1\x87\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xb8\xd1\x81\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f**: \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8f\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd1\x8d\xd0\xba\xd1\x81\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb8 \xd0\xb2\xd1\x8b\xd1\x8f\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd0\xb5\xd0\xb9 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8.\n\n## \xd0\x9f\xd1\x80\xd0\xb5\xd0\xb8\xd0\xbc\xd1\x83\xd1\x89\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0 \xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xb8\n\n### \xd0\x9f\xd1\x80\xd0\xb5\xd0\xb8\xd0\xbc\xd1\x83\xd1\x89\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0\n\n- **\xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x82\xd0\xb0**: \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0 \xd0\xb2 \xd0\xbf\xd0\xbe\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb8 \xd0\xb8 \xd1\x80\xd0\xb5\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xb5\xd1\x91 \xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x88\xd0\xb8\xd1\x80\xd0\xbe\xd0\xba\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xba\xd1\x80\xd1\x83\xd0\xb3\xd0\xb0 \xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9.\n  \n- **\xd0\x98\xd0\xbd\xd1\x82\xd0\xb5\xd1\x80\xd0\xbf\xd1\x80\xd0\xb5\xd1\x82\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xbb\xd0\xb5\xd0\xb3\xd0\xba\xd0\xbe \xd0\xb8\xd0\xbd\xd1\x82\xd0\xb5\xd1\x80\xd0\xbf\xd1\x80\xd0\xb5\xd1\x82\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c, \xd1\x82\xd0\xb0\xd0\xba \xd0\xba\xd0\xb0\xd0\xba \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b \xd0\xbf\xd0\xbe\xd0\xba\xd0\xb0\xd0\xb7\xd1\x8b\xd0\xb2\xd0\xb0\xd1\x8e\xd1\x82, \xd0\xba\xd0\xb0\xd0\xba \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb2\xd0\xbb\xd0\xb8\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xbd\xd0\xb0 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x83\xd1\x8e.\n\n- **\xd0\x91\xd1\x8b\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd1\x82\xd0\xb0**: \xd0\x9e\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd1\x82\xd1\x80\xd0\xb5\xd0\xb1\xd1\x83\xd0\xb5\xd1\x82 \xd0\xbe\xd1\x82\xd0\xbd\xd0\xbe\xd1\x81\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd0\xbd\xd0\xb5\xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xb2\xd1\x8b\xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x80\xd0\xb5\xd1\x81\xd1\x83\xd1\x80\xd1\x81\xd0\xbe\xd0\xb2 \xd0\xb8 \xd0\xb2\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb8.\n\n- **\xd0\xad\xd1\x84\xd1\x84\xd0\xb5\xd0\xba\xd1\x82\xd0\xb8\xd0\xb2\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x92 \xd1\x81\xd0\xbb\xd1\x83\xd1\x87\xd0\xb0\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd0\xb5\xd0\xb9, \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xb4\xd0\xb0\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd0\xbe\xd1\x87\xd0\xb5\xd0\xbd\xd1\x8c \xd1\x82\xd0\xbe\xd1\x87\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd0\xbd\xd0\xbe\xd0\xb7\xd1\x8b.\n\n### \xd0\x9d\xd0\xb5\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xb8\n\n- **\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x83\xd1\x8e \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbd\xd0\xb5 \xd0\xb2\xd1\x81\xd0\xb5\xd0\xb3\xd0\xb4\xd0\xb0 \xd1\x81\xd0\xbe\xd0\xbe\xd1\x82\xd0\xb2\xd0\xb5\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb5\xd1\x82 \xd1\x80\xd0\xb5\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8.\n\n- **\xd0\xa7\xd1\x83\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xba \xd0\xb2\xd1\x8b\xd0\xb1\xd1\x80\xd0\xbe\xd1\x81\xd0\xb0\xd0\xbc**: \xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd1\x81\xd0\xb8\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd0\xb8\xd1\x81\xd0\xba\xd0\xb0\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb0 \xd0\xb2\xd1\x8b\xd0\xb1\xd1\x80\xd0\xbe\xd1\x81\xd0\xb0\xd0\xbc\xd0\xb8, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xbf\xd1\x80\xd0\xb8\xd0\xb2\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8 \xd0\xba \xd0\xbd\xd0\xb5\xd0\xb2\xd0\xb5\xd1\x80\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xb2\xd1\x8b\xd0\xb2\xd0\xbe\xd0\xb4\xd0\xb0\xd0\xbc.\n\n- **\xd0\x9c\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb8\xd0\xba\xd0\xbe\xd0\xbb\xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb0\xd1\x80\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x95\xd1\x81\xd0\xbb\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xb5 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x81\xd0\xb8\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd0\xba\xd0\xbe\xd1\x80\xd1\x80\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x80\xd1\x83\xd1\x8e\xd1\x82 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3 \xd1\x81 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbc, \xd1\x8d\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xbf\xd1\x80\xd0\xb8\xd0\xb2\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8 \xd0\xba \xd0\xbd\xd0\xb5\xd1\x81\xd1\x82\xd0\xb0\xd0\xb1\xd0\xb8\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8.\n\n- **\xd0\x9e\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x87\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x81\xd0\xbf\xd0\xbe\xd1\x81\xd0\xbe\xd0\xb1\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xbd\xd0\xb5 \xd1\x81\xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd1\x81 \xd1\x81\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8f\xd0\xbc\xd0\xb8 \xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xbe\xd1\x82\xd0\xbd\xd0\xbe\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8.\n\n\n# \xd0\x97\xd0\xb0\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5\n\n## \xd0\xa0\xd0\xb5\xd0\xb7\xd1\x8e\xd0\xbc\xd0\xb5\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xe2\x80\x94 \xd1\x8d\xd1\x82\xd0\xbe \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4, \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbe\xd1\x82\xd0\xbd\xd0\xbe\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8 \xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8\xd0\xbb\xd0\xb8 \xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8. \xd0\xad\xd1\x82\xd0\xbe\xd1\x82 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xbf\xd0\xbe\xd0\xb7\xd0\xb2\xd0\xbe\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd1\x8b\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85. \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xbd\xd0\xb0 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb8 \xd0\xbe \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xb5\xd1\x91 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd1\x8b\xd0\xbc \xd0\xb8 \xd1\x8d\xd1\x84\xd1\x84\xd0\xb5\xd0\xba\xd1\x82\xd0\xb8\xd0\xb2\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xb8\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xbc \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.\n\n\xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x8d\xd1\x82\xd0\xb0\xd0\xbf\xd1\x8b \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb2\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb0\xd1\x8e\xd1\x82:\n\n1. **\xd0\xa1\xd0\xb1\xd0\xbe\xd1\x80 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85**: \xd0\x9d\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xbe \xd1\x81\xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd1\x82\xd1\x8c \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb5 \xd0\xb1\xd1\x83\xd0\xb4\xd1\x83\xd1\x82 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8.\n2. **\xd0\x9f\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb2\xd0\xb0\xd1\x80\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd0\xba\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85**: \xd0\x94\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb3\xd1\x83\xd1\x82 \xd0\xbf\xd0\xbe\xd1\x82\xd1\x80\xd0\xb5\xd0\xb1\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd0\xbe\xd1\x87\xd0\xb8\xd1\x81\xd1\x82\xd0\xba\xd0\xb8 \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x83\xd1\x81\xd1\x82\xd1\x80\xd0\xb0\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb2\xd1\x8b\xd0\xb1\xd1\x80\xd0\xbe\xd1\x81\xd0\xbe\xd0\xb2 \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xbf\xd1\x83\xd1\x81\xd0\xba\xd0\xbe\xd0\xb2.\n3. **\xd0\x9f\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8**: \xd0\x98\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd1\x8f \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2, \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb2\xd1\x8b\xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb5 \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb8\xd1\x80\xd1\x83\xd1\x8e\xd1\x82 \xd1\x81\xd1\x83\xd0\xbc\xd0\xbc\xd1\x83 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xbe\xd0\xba \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb8 \xd1\x84\xd0\xb0\xd0\xba\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8.\n4. **\xd0\x9e\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb0 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8**: \xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb2\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd1\x81 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5\xd0\xbc \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbc\xd0\xb5\xd1\x82\xd1\x80\xd0\xb8\xd0\xba, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb0\xd0\xba R-\xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82, \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd1\x8f\xd1\x8f \xd0\xb0\xd0\xb1\xd1\x81\xd0\xbe\xd0\xbb\xd1\x8e\xd1\x82\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb0 \xd0\xb8 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xb8\xd0\xb5.\n5. **\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd0\xbd\xd0\xbe\xd0\xb7\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5**: \xd0\x9f\xd0\xbe\xd1\x81\xd0\xbb\xd0\xb5 \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb8 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb0 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd0\xbd\xd0\xbe\xd0\xb7\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b\xd1\x85 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.\n\n## \xd0\x91\xd1\x83\xd0\xb4\xd1\x83\xd1\x89\xd0\xb5\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xb2\xd0\xb0\xd0\xb6\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xb8\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xbc \xd0\xb2 \xd0\xbe\xd0\xb1\xd0\xbb\xd0\xb0\xd1\x81\xd1\x82\xd0\xb8 \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb8 \xd0\xbc\xd0\xb0\xd1\x88\xd0\xb8\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f. \xd0\x9d\xd0\xb5\xd1\x81\xd0\xbc\xd0\xbe\xd1\x82\xd1\x80\xd1\x8f \xd0\xbd\xd0\xb0 \xd0\xbf\xd0\xbe\xd1\x8f\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb1\xd0\xbe\xd0\xbb\xd0\xb5\xd0\xb5 \xd1\x81\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb0\xd0\xba \xd0\xb4\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb2\xd1\x8c\xd1\x8f \xd1\x80\xd0\xb5\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb9\xd1\x80\xd0\xbe\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8, \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd1\x81\xd0\xbe\xd1\x85\xd1\x80\xd0\xb0\xd0\xbd\xd1\x8f\xd0\xb5\xd1\x82 \xd1\x81\xd0\xb2\xd0\xbe\xd1\x8e \xd0\xb0\xd0\xba\xd1\x82\xd1\x83\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xb1\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xbe\xd0\xb4\xd0\xb0\xd1\x80\xd1\x8f \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb5\xd0\xb9 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x82\xd0\xb5 \xd0\xb8 \xd0\xb8\xd0\xbd\xd1\x82\xd0\xb5\xd1\x80\xd0\xbf\xd1\x80\xd0\xb5\xd1\x82\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8.\n\n\xd0\x92 \xd0\xb1\xd1\x83\xd0\xb4\xd1\x83\xd1\x89\xd0\xb5\xd0\xbc \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbe\xd0\xb6\xd0\xb8\xd0\xb4\xd0\xb0\xd1\x82\xd1\x8c:\n\n- **\xd0\x98\xd0\xbd\xd1\x82\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x81 \xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8**: \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xb1\xd1\x83\xd0\xb4\xd0\xb5\xd1\x82 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xb2 \xd1\x81\xd0\xbe\xd1\x87\xd0\xb5\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb8 \xd1\x81 \xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8 \xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xbe\xd0\xb1\xd1\x8a\xd0\xb5\xd0\xbc\xd0\xbe\xd0\xb2 \xd0\xb8\xd0\xbd\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8.\n- **\xd0\xa3\xd0\xbb\xd1\x83\xd1\x87\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb0\xd0\xbb\xd0\xb3\xd0\xbe\xd1\x80\xd0\xb8\xd1\x82\xd0\xbc\xd0\xbe\xd0\xb2**: \xd0\xa0\xd0\xb0\xd0\xb7\xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd0\xba\xd0\xb0 \xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b\xd1\x85 \xd0\xb0\xd0\xbb\xd0\xb3\xd0\xbe\xd1\x80\xd0\xb8\xd1\x82\xd0\xbc\xd0\xbe\xd0\xb2, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb3\xd1\x83\xd1\x82 \xd1\x83\xd0\xbb\xd1\x83\xd1\x87\xd1\x88\xd0\xb8\xd1\x82\xd1\x8c \xd1\x82\xd0\xbe\xd1\x87\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8, \xd0\xbe\xd1\x81\xd0\xbe\xd0\xb1\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe \xd0\xb2 \xd1\x83\xd1\x81\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb8\xd1\x8f\xd1\x85 \xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe\xd0\xbc\xd0\xb5\xd1\x80\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.\n- **\xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd1\x80\xd0\xb5\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xbc \xd0\xb2\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb8**: \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xb1\xd1\x83\xd0\xb4\xd0\xb5\xd1\x82 \xd0\xb2\xd1\x81\xd0\xb5 \xd1\x87\xd0\xb0\xd1\x89\xd0\xb5 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb2 \xd1\x80\xd0\xb5\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xbc \xd0\xb2\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb8, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbf\xd0\xbe\xd0\xb7\xd0\xb2\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x82 \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x82\xd1\x8c \xd0\xb1\xd0\xbe\xd0\xbb\xd0\xb5\xd0\xb5 \xd0\xbe\xd0\xb1\xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x80\xd0\xb5\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xb0\xd0\xba\xd1\x82\xd1\x83\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8\xd0\xbd\xd1\x84\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8.\n\n\xd0\xa2\xd0\xb0\xd0\xba\xd0\xb8\xd0\xbc \xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd0\xb7\xd0\xbe\xd0\xbc, \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2\xd0\xb0\xd0\xb6\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xb8\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xbc \xd0\xb2 \xd0\xb0\xd1\x80\xd1\x81\xd0\xb5\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb5 \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x82\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2 \xd0\xb8 \xd0\xb8\xd1\x81\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9, \xd0\xbe\xd0\xb1\xd0\xb5\xd1\x81\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb8\xd0\xb2\xd0\xb0\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x82\xd1\x83 \xd0\xb8 \xd1\x8d\xd1\x84\xd1\x84\xd0\xb5\xd0\xba\xd1\x82\xd0\xb8\xd0\xb2\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xb2 \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb5 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.'), kwargs: {} 
Stack: Traceback (most recent call last):
  File "d:\danila_prj_my\meta-gpt\metagpt\utils\exceptions.py", line 33, in async_wrapper
    return await func(*args, **kwargs)
  File "d:\danila_prj_my\meta-gpt\metagpt\utils\file.py", line 40, in write
    async with aiofiles.open(full_path, mode="wb") as writer:
  File "D:\danila_prj_my\meta-gpt\.venv\lib\site-packages\aiofiles\base.py", line 98, in __aenter__
    self._obj = await self._coro
  File "D:\danila_prj_my\meta-gpt\.venv\lib\site-packages\aiofiles\threadpool\__init__.py", line 94, in _open
    f = yield from loop.run_in_executor(executor, cb)
  File "C:\Users\Denchik\AppData\Local\Programs\Python\Python39\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
OSError: [Errno 22] Invalid argument: 'D:\\danila_prj_my\\meta-gpt\\data\\tutorial_docx\\2024-11-06_22-45-32\\Что такое линейная регрессия?.md'

2024-11-06 22:51:46.019 | DEBUG    | metagpt.roles.role:_observe:431 - Stitch(Tutorial Assistant) observed: ['user: What is Linear Regre...']
2024-11-06 22:51:46.019 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:51:46.019 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Russion.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:51:49.152 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:51:49.167 | INFO     | __main__:_act:82 - {'title': 'Что такое линейная регрессия?', 'directory': [{'Введение в линейную регрессию': ['Определение', 'История линейной регрессии']}, {'Основные концепции линейной регрессии': ['Модель линейной регрессии', 'Параметры модели', 'Предположения линейной регрессии']}, {'Методы оценки линейной регрессии': ['Метод наименьших квадратов', 'Регуляризация']}, {'Применение линейной регрессии': ['Примеры использования', 'Преимущества и недостатки']}, {'Инструменты и библиотеки для линейной регрессии': ['Python', 'R', 'MATLAB']}, {'Заключение и дальнейшие шаги': ['Ресурсы для изучения', 'Будущие направления исследований']}]}
2024-11-06 22:51:49.170 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=0
2024-11-06 22:51:49.171 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Введение в линейную регрессию\': [\'Определение\', \'История линейной регрессии\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:51:58.714 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:51:58.729 | INFO     | __main__:_act:86 - # Введение в линейную регрессию

## Определение

Линейная регрессия — это статистический метод, используемый для моделирования отношений между зависимой переменной и одной или несколькими независимыми переменными. Основная цель линейной регрессии заключается в том, чтобы предсказать значение зависимой переменной на основе значений независимых переменных. Модель линейной регрессии предполагает, что существует линейная зависимость между переменными, что можно выразить в виде уравнения:

\[ Y = a + bX + \epsilon \]

где:
- \( Y \) — зависимая переменная,
- \( a \) — свободный член (константа),
- \( b \) — коэффициент наклона (параметр),
- \( X \) — независимая переменная,
- \( \epsilon \) — ошибка (случайная ошибка).

Линейная регрессия может быть простой (одна независимая переменная) или множественной (несколько независимых переменных).

## История линейной регрессии

Линейная регрессия имеет долгую историю, восходящую к 19 веку. Основные этапы её развития включают:

1. **Франсис Гальтон (1885)**: Гальтон впервые ввел концепцию регрессии, исследуя связь между ростом родителей и их детей. Он заметил, что дети, как правило, имеют рост, который "регрессирует" к среднему значению.

2. **Карл Пирсон (1896)**: Пирсон разработал метод наименьших квадратов, который стал основой для линейной регрессии. Он предложил использовать этот метод для нахождения линии, минимизирующей сумму квадратов отклонений между наблюдаемыми и предсказанными значениями.

3. **Развитие в 20 веке**: В 20 веке линейная регрессия стала широко использоваться в различных областях, таких как экономика, биология и социальные науки. Появление компьютерных технологий значительно упростило вычисления, связанные с линейной регрессией.

4. **Современные подходы**: С развитием машинного обучения и статистики линейная регрессия продолжает оставаться важным инструментом для анализа данных и построения предсказательных моделей. Она служит основой для более сложных методов, таких как регрессия с регуляризацией (например, Lasso и Ridge).

Линейная регрессия остается одним из самых простых и понятных методов анализа данных, что делает её популярной как среди исследователей, так и среди практиков.
2024-11-06 22:51:58.736 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=1
2024-11-06 22:51:58.736 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Основные концепции линейной регрессии\': [\'Модель линейной регрессии\', \'Параметры модели\', \'Предположения линейной регрессии\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:52:05.364 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:52:05.364 | INFO     | __main__:_act:86 - # Основные концепции линейной регрессии

## Модель линейной регрессии

Модель линейной регрессии используется для предсказания значения зависимой переменной (Y) на основе одной или нескольких независимых переменных (X). Основная идея заключается в нахождении линейной зависимости между переменными. Модель можно представить в виде уравнения:

\[ Y = \beta_0 + \beta_1 X_1 + \beta_2 X_2 + ... + \beta_n X_n + \epsilon \]

где:
- \( Y \) — зависимая переменная,
- \( \beta_0 \) — свободный член (константа),
- \( \beta_1, \beta_2, ..., \beta_n \) — коэффициенты регрессии,
- \( X_1, X_2, ..., X_n \) — независимые переменные,
- \( \epsilon \) — ошибка модели.

## Параметры модели

Параметры модели линейной регрессии включают в себя:
- **Свободный член (\( \beta_0 \))**: значение Y, когда все X равны нулю.
- **Коэффициенты (\( \beta_1, \beta_2, ..., \beta_n \))**: показывают, как изменение каждой независимой переменной влияет на зависимую переменную. Например, если \( \beta_1 \) равно 2, это означает, что при увеличении \( X_1 \) на 1, \( Y \) увеличится на 2, при условии, что остальные переменные остаются постоянными.

## Предположения линейной регрессии

Для корректного применения линейной регрессии необходимо учитывать следующие предположения:

1. **Линейность**: Существует линейная связь между зависимой и независимыми переменными.
2. **Независимость ошибок**: Ошибки (остатки) модели должны быть независимыми друг от друга.
3. **Гомоскедастичность**: Ошибки должны иметь постоянную дисперсию для всех значений независимых переменных.
4. **Нормальность ошибок**: Ошибки должны быть нормально распределены, особенно для малых выборок.

Соблюдение этих предположений позволяет обеспечить надежность и точность модели линейной регрессии.
2024-11-06 22:52:05.374 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=2
2024-11-06 22:52:05.374 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Методы оценки линейной регрессии\': [\'Метод наименьших квадратов\', \'Регуляризация\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:52:16.949 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:52:16.964 | INFO     | __main__:_act:86 - # Методы оценки линейной регрессии

## Метод наименьших квадратов

Метод наименьших квадратов (МНК) — это статистический метод, используемый для оценки параметров линейной регрессии. Основная идея заключается в минимизации суммы квадратов разностей между наблюдаемыми значениями и значениями, предсказанными моделью.

### Принцип работы

1. **Формулировка задачи**: Пусть у нас есть набор данных, состоящий из пар (x, y), где x — независимая переменная, а y — зависимая переменная. Мы хотим найти линейную зависимость между ними в виде уравнения:

   \[
   y = \beta_0 + \beta_1 x + \epsilon
   \]

   где:
   - \( \beta_0 \) — свободный член,
   - \( \beta_1 \) — коэффициент наклона,
   - \( \epsilon \) — ошибка.

2. **Минимизация ошибки**: Мы минимизируем функцию потерь, которая представляет собой сумму квадратов ошибок:

   \[
   L(\beta_0, \beta_1) = \sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i))^2
   \]

3. **Решение уравнений**: Для нахождения оптимальных значений \( \beta_0 \) и \( \beta_1 \) мы можем использовать нормальные уравнения:

   \[
   \beta_1 = \frac{n(\sum xy) - (\sum x)(\sum y)}{n(\sum x^2) - (\sum x)^2}
   \]

   \[
   \beta_0 = \bar{y} - \beta_1 \bar{x}
   \]

   где \( \bar{x} \) и \( \bar{y} \) — средние значения x и y соответственно.

## Регуляризация

Регуляризация — это метод, используемый для предотвращения переобучения модели, добавляя штраф за сложность модели. В контексте линейной регрессии существуют два основных типа регуляризации: Lasso и Ridge.

### Lasso (L1-регуляризация)

Lasso добавляет штраф, пропорциональный абсолютной величине коэффициентов:

\[
L(\beta) = \sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i))^2 + \lambda \sum_{j=1}^{p} |\beta_j|
\]

где \( \lambda \) — параметр регуляризации, который контролирует степень штрафа.

### Ridge (L2-регуляризация)

Ridge добавляет штраф, пропорциональный квадрату величины коэффициентов:

\[
L(\beta) = \sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i))^2 + \lambda \sum_{j=1}^{p} \beta_j^2
\]

### Применение регуляризации

Регуляризация помогает улучшить обобщающую способность модели, особенно когда количество признаков велико по сравнению с количеством наблюдений. Выбор между Lasso и Ridge зависит от конкретной задачи и структуры данных.
2024-11-06 22:52:16.972 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=3
2024-11-06 22:52:16.972 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Применение линейной регрессии\': [\'Примеры использования\', \'Преимущества и недостатки\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:52:23.608 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:52:23.613 | INFO     | __main__:_act:86 - # Применение линейной регрессии

## Примеры использования

Линейная регрессия широко используется в различных областях для анализа и предсказания данных. Вот несколько примеров:

1. **Экономика**: Прогнозирование цен на жилье на основе различных факторов, таких как площадь, количество комнат и местоположение.
   
2. **Медицина**: Оценка влияния различных факторов на здоровье пациента, например, связь между уровнем холестерина и риском сердечно-сосудистых заболеваний.

3. **Маркетинг**: Анализ влияния рекламных расходов на объем продаж, что позволяет компаниям оптимизировать свои бюджеты.

4. **Спорт**: Прогнозирование результатов матчей на основе статистики игроков и команд.

5. **Наука**: Моделирование зависимости между переменными в экспериментах, например, влияние температуры на скорость реакции.

## Преимущества и недостатки

### Преимущества

- **Простота**: Линейная регрессия легко понимается и интерпретируется, что делает её доступной для анализа данных.
  
- **Быстрота**: Модели линейной регрессии быстро обучаются, что позволяет эффективно обрабатывать большие объемы данных.

- **Непараметричность**: Линейная регрессия не требует строгих предположений о распределении данных, что делает её универсальным инструментом.

- **Прогнозирование**: Позволяет делать предсказания на основе существующих данных, что полезно в различных областях.

### Недостатки

- **Линейность**: Линейная регрессия предполагает линейную зависимость между переменными, что может не соответствовать реальности.

- **Чувствительность к выбросам**: Наличие выбросов может значительно исказить результаты модели.

- **Мультиколлинеарность**: Если независимые переменные сильно коррелируют друг с другом, это может привести к нестабильности коэффициентов.

- **Ограниченная сложность**: Линейная регрессия не может захватывать сложные нелинейные зависимости, что может ограничивать её применение в некоторых задачах.
2024-11-06 22:52:23.619 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=4
2024-11-06 22:52:23.619 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Инструменты и библиотеки для линейной регрессии\': [\'Python\', \'R\', \'MATLAB\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:52:33.010 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:52:33.014 | INFO     | __main__:_act:86 - # Инструменты и библиотеки для линейной регрессии

## Python

В Python для выполнения линейной регрессии часто используются библиотеки `scikit-learn` и `statsmodels`. 

### Пример использования `scikit-learn`

```python
# Импорт необходимых библиотек
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Генерация данных
X = np.array([[1], [2], [3], [4], [5]])
y = np.array([1, 2, 3, 4, 5])

# Создание модели линейной регрессии
model = LinearRegression()

# Обучение модели
model.fit(X, y)

# Предсказание
y_pred = model.predict(X)

# Визуализация результатов
plt.scatter(X, y, color='blue', label='Исходные данные')
plt.plot(X, y_pred, color='red', label='Линейная регрессия')
plt.legend()
plt.show()
```

### Пример использования `statsmodels`

```python
# Импорт необходимых библиотек
import numpy as np
import statsmodels.api as sm

# Генерация данных
X = np.array([1, 2, 3, 4, 5])
y = np.array([1, 2, 3, 4, 5])

# Добавление константы для свободного члена
X = sm.add_constant(X)

# Создание модели линейной регрессии
model = sm.OLS(y, X)

# Обучение модели
results = model.fit()

# Вывод результатов
print(results.summary())
```

## R

В R для выполнения линейной регрессии используется функция `lm()`.

### Пример использования

```r
# Генерация данных
X <- c(1, 2, 3, 4, 5)
y <- c(1, 2, 3, 4, 5)

# Создание модели линейной регрессии
model <- lm(y ~ X)

# Вывод результатов
summary(model)

# Визуализация результатов
plot(X, y, main="Линейная регрессия", xlab="X", ylab="y")
abline(model, col="red")
```

## MATLAB

В MATLAB для выполнения линейной регрессии можно использовать функцию `fitlm()`.

### Пример использования

```matlab
% Генерация данных
X = (1:5)';
y = [1; 2; 3; 4; 5];

% Создание модели линейной регрессии
mdl = fitlm(X, y);

% Вывод результатов
disp(mdl)

% Визуализация результатов
figure;
scatter(X, y, 'b');
hold on;
y_pred = predict(mdl, X);
plot(X, y_pred, 'r');
title('Линейная регрессия');
xlabel('X');
ylabel('y');
hold off;
```
2024-11-06 22:52:33.024 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=5
2024-11-06 22:52:33.025 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression?".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Заключение и дальнейшие шаги\': [\'Ресурсы для изучения\', \'Будущие направления исследований\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression?".\n'}]
2024-11-06 22:52:40.436 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:52:40.436 | INFO     | __main__:_act:86 - # Заключение и дальнейшие шаги

## Ресурсы для изучения

1. **Книги**
   - "Введение в статистику" - автор: Д. М. Д. К. 
   - "Машинное обучение: подходы и алгоритмы" - автор: И. И. И. 

2. **Онлайн-курсы**
   - [Coursera: Основы машинного обучения](https://www.coursera.org/learn/machine-learning)
   - [edX: Введение в статистику и анализ данных](https://www.edx.org/course/introduction-to-statistics-and-data-analysis)

3. **Статьи и блоги**
   - [Towards Data Science](https://towardsdatascience.com/)
   - [KDnuggets](https://www.kdnuggets.com/)

4. **Документация**
   - [Scikit-learn: Документация по линейной регрессии](https://scikit-learn.org/stable/modules/linear_model.html#linear-regression)
   - [Statsmodels: Документация](https://www.statsmodels.org/stable/index.html)

## Будущие направления исследований

1. **Улучшение алгоритмов**
   - Исследование новых методов оптимизации для повышения точности линейной регрессии.

2. **Применение в больших данных**
   - Изучение применения линейной регрессии в контексте больших объемов данных и распределенных систем.

3. **Интеграция с другими методами**
   - Комбинирование линейной регрессии с методами машинного обучения, такими как деревья решений и нейронные сети, для улучшения предсказательной способности.

4. **Анализ временных рядов**
   - Применение линейной регрессии для анализа и предсказания временных рядов в различных областях, таких как экономика и экология.
2024-11-06 22:52:40.448 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:52:40.448 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:52:40.451 | ERROR    | __main__:react:95 - [Errno 22] Invalid argument: 'data\\2024-11-06_22-52-40\\Что такое линейная регрессия?.md': , 
Calling write with args: (<class 'metagpt.utils.file.File'>, WindowsPath('data/2024-11-06_22-52-40'), 'Что такое линейная регрессия?.md', b'# \xd0\xa7\xd1\x82\xd0\xbe \xd1\x82\xd0\xb0\xd0\xba\xd0\xbe\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f?\n\n\n# \xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x83\xd1\x8e \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8e\n\n## \xd0\x9e\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xe2\x80\x94 \xd1\x8d\xd1\x82\xd0\xbe \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4, \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbe\xd1\x82\xd0\xbd\xd0\xbe\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8 \xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8\xd0\xbb\xd0\xb8 \xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8. \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x86\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb7\xd0\xb0\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2 \xd1\x82\xd0\xbe\xd0\xbc, \xd1\x87\xd1\x82\xd0\xbe\xd0\xb1\xd1\x8b \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x82\xd1\x8c \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85. \xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd1\x82, \xd1\x87\xd1\x82\xd0\xbe \xd1\x81\xd1\x83\xd1\x89\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb5\xd1\x82 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xb2\xd1\x8b\xd1\x80\xd0\xb0\xd0\xb7\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb2 \xd0\xb2\xd0\xb8\xd0\xb4\xd0\xb5 \xd1\x83\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f:\n\n\\[ Y = a + bX + \\epsilon \\]\n\n\xd0\xb3\xd0\xb4\xd0\xb5:\n- \\( Y \\) \xe2\x80\x94 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f,\n- \\( a \\) \xe2\x80\x94 \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x87\xd0\xbb\xd0\xb5\xd0\xbd (\xd0\xba\xd0\xbe\xd0\xbd\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd1\x82\xd0\xb0),\n- \\( b \\) \xe2\x80\x94 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82 \xd0\xbd\xd0\xb0\xd0\xba\xd0\xbb\xd0\xbe\xd0\xbd\xd0\xb0 (\xd0\xbf\xd0\xb0\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x82\xd1\x80),\n- \\( X \\) \xe2\x80\x94 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f,\n- \\( \\epsilon \\) \xe2\x80\x94 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb0 (\xd1\x81\xd0\xbb\xd1\x83\xd1\x87\xd0\xb0\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb0).\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd0\xb9 (\xd0\xbe\xd0\xb4\xd0\xbd\xd0\xb0 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f) \xd0\xb8\xd0\xbb\xd0\xb8 \xd0\xbc\xd0\xbd\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 (\xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xbe \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85).\n\n## \xd0\x98\xd1\x81\xd1\x82\xd0\xbe\xd1\x80\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xb8\xd0\xbc\xd0\xb5\xd0\xb5\xd1\x82 \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb3\xd1\x83\xd1\x8e \xd0\xb8\xd1\x81\xd1\x82\xd0\xbe\xd1\x80\xd0\xb8\xd1\x8e, \xd0\xb2\xd0\xbe\xd1\x81\xd1\x85\xd0\xbe\xd0\xb4\xd1\x8f\xd1\x89\xd1\x83\xd1\x8e \xd0\xba 19 \xd0\xb2\xd0\xb5\xd0\xba\xd1\x83. \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x8d\xd1\x82\xd0\xb0\xd0\xbf\xd1\x8b \xd0\xb5\xd1\x91 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xb2\xd0\xb8\xd1\x82\xd0\xb8\xd1\x8f \xd0\xb2\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb0\xd1\x8e\xd1\x82:\n\n1. **\xd0\xa4\xd1\x80\xd0\xb0\xd0\xbd\xd1\x81\xd0\xb8\xd1\x81 \xd0\x93\xd0\xb0\xd0\xbb\xd1\x8c\xd1\x82\xd0\xbe\xd0\xbd (1885)**: \xd0\x93\xd0\xb0\xd0\xbb\xd1\x8c\xd1\x82\xd0\xbe\xd0\xbd \xd0\xb2\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb2\xd1\x8b\xd0\xb5 \xd0\xb2\xd0\xb2\xd0\xb5\xd0\xbb \xd0\xba\xd0\xbe\xd0\xbd\xd1\x86\xd0\xb5\xd0\xbf\xd1\x86\xd0\xb8\xd1\x8e \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8, \xd0\xb8\xd1\x81\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8f \xd1\x81\xd0\xb2\xd1\x8f\xd0\xb7\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd0\xbc \xd1\x80\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9 \xd0\xb8 \xd0\xb8\xd1\x85 \xd0\xb4\xd0\xb5\xd1\x82\xd0\xb5\xd0\xb9. \xd0\x9e\xd0\xbd \xd0\xb7\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x82\xd0\xb8\xd0\xbb, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb4\xd0\xb5\xd1\x82\xd0\xb8, \xd0\xba\xd0\xb0\xd0\xba \xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xb8\xd0\xbb\xd0\xbe, \xd0\xb8\xd0\xbc\xd0\xb5\xd1\x8e\xd1\x82 \xd1\x80\xd0\xbe\xd1\x81\xd1\x82, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 "\xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd1\x82" \xd0\xba \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb5\xd0\xbc\xd1\x83 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8e.\n\n2. **\xd0\x9a\xd0\xb0\xd1\x80\xd0\xbb \xd0\x9f\xd0\xb8\xd1\x80\xd1\x81\xd0\xbe\xd0\xbd (1896)**: \xd0\x9f\xd0\xb8\xd1\x80\xd1\x81\xd0\xbe\xd0\xbd \xd1\x80\xd0\xb0\xd0\xb7\xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0\xd0\xbb \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 \xd1\x81\xd1\x82\xd0\xb0\xd0\xbb \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8. \xd0\x9e\xd0\xbd \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb8\xd0\xbb \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd1\x8d\xd1\x82\xd0\xbe\xd1\x82 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbd\xd0\xb0\xd1\x85\xd0\xbe\xd0\xb6\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xb8, \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb8\xd1\x80\xd1\x83\xd1\x8e\xd1\x89\xd0\xb5\xd0\xb9 \xd1\x81\xd1\x83\xd0\xbc\xd0\xbc\xd1\x83 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbe\xd1\x82\xd0\xba\xd0\xbb\xd0\xbe\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbd\xd0\xb0\xd0\xb1\xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8.\n\n3. **\xd0\xa0\xd0\xb0\xd0\xb7\xd0\xb2\xd0\xb8\xd1\x82\xd0\xb8\xd0\xb5 \xd0\xb2 20 \xd0\xb2\xd0\xb5\xd0\xba\xd0\xb5**: \xd0\x92 20 \xd0\xb2\xd0\xb5\xd0\xba\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd1\x81\xd1\x82\xd0\xb0\xd0\xbb\xd0\xb0 \xd1\x88\xd0\xb8\xd1\x80\xd0\xbe\xd0\xba\xd0\xbe \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xb2 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbe\xd0\xb1\xd0\xbb\xd0\xb0\xd1\x81\xd1\x82\xd1\x8f\xd1\x85, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb0\xd0\xba \xd1\x8d\xd0\xba\xd0\xbe\xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb8\xd0\xba\xd0\xb0, \xd0\xb1\xd0\xb8\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x8f \xd0\xb8 \xd1\x81\xd0\xbe\xd1\x86\xd0\xb8\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbd\xd0\xb0\xd1\x83\xd0\xba\xd0\xb8. \xd0\x9f\xd0\xbe\xd1\x8f\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xba\xd0\xbe\xd0\xbc\xd0\xbf\xd1\x8c\xd1\x8e\xd1\x82\xd0\xb5\xd1\x80\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x82\xd0\xb5\xd1\x85\xd0\xbd\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd0\xb9 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd1\x83\xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8\xd0\xbb\xd0\xbe \xd0\xb2\xd1\x8b\xd1\x87\xd0\xb8\xd1\x81\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f, \xd1\x81\xd0\xb2\xd1\x8f\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x81 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb5\xd0\xb9.\n\n4. **\xd0\xa1\xd0\xbe\xd0\xb2\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbf\xd0\xbe\xd0\xb4\xd1\x85\xd0\xbe\xd0\xb4\xd1\x8b**: \xd0\xa1 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xb2\xd0\xb8\xd1\x82\xd0\xb8\xd0\xb5\xd0\xbc \xd0\xbc\xd0\xb0\xd1\x88\xd0\xb8\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb8 \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd0\xba\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c\xd1\x81\xd1\x8f \xd0\xb2\xd0\xb0\xd0\xb6\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xb8\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xbc \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb8 \xd0\xbf\xd0\xbe\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9. \xd0\x9e\xd0\xbd\xd0\xb0 \xd1\x81\xd0\xbb\xd1\x83\xd0\xb6\xd0\xb8\xd1\x82 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbe\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb1\xd0\xbe\xd0\xbb\xd0\xb5\xd0\xb5 \xd1\x81\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xb2, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb0\xd0\xba \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd1\x81 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb5\xd0\xb9 (\xd0\xbd\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80, Lasso \xd0\xb8 Ridge).\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xbe\xd0\xb4\xd0\xbd\xd0\xb8\xd0\xbc \xd0\xb8\xd0\xb7 \xd1\x81\xd0\xb0\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xbf\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd1\x8b\xd1\x85 \xd0\xb8 \xd0\xbf\xd0\xbe\xd0\xbd\xd1\x8f\xd1\x82\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xb2 \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xb5\xd1\x91 \xd0\xbf\xd0\xbe\xd0\xbf\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xba\xd0\xb0\xd0\xba \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb8 \xd0\xb8\xd1\x81\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xb9, \xd1\x82\xd0\xb0\xd0\xba \xd0\xb8 \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb0\xd0\xba\xd1\x82\xd0\xb8\xd0\xba\xd0\xbe\xd0\xb2.\n\n\n# \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xba\xd0\xbe\xd0\xbd\xd1\x86\xd0\xb5\xd0\xbf\xd1\x86\xd0\xb8\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n## \xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n\xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 (Y) \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb8\xd0\xbb\xd0\xb8 \xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xb8\xd1\x85 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 (X). \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xb8\xd0\xb4\xd0\xb5\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2 \xd0\xbd\xd0\xb0\xd1\x85\xd0\xbe\xd0\xb6\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8. \xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x82\xd1\x8c \xd0\xb2 \xd0\xb2\xd0\xb8\xd0\xb4\xd0\xb5 \xd1\x83\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f:\n\n\\[ Y = \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + ... + \\beta_n X_n + \\epsilon \\]\n\n\xd0\xb3\xd0\xb4\xd0\xb5:\n- \\( Y \\) \xe2\x80\x94 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f,\n- \\( \\beta_0 \\) \xe2\x80\x94 \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x87\xd0\xbb\xd0\xb5\xd0\xbd (\xd0\xba\xd0\xbe\xd0\xbd\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd1\x82\xd0\xb0),\n- \\( \\beta_1, \\beta_2, ..., \\beta_n \\) \xe2\x80\x94 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8,\n- \\( X_1, X_2, ..., X_n \\) \xe2\x80\x94 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xb5 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5,\n- \\( \\epsilon \\) \xe2\x80\x94 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb0 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8.\n\n## \xd0\x9f\xd0\xb0\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x82\xd1\x80\xd1\x8b \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\n\n\xd0\x9f\xd0\xb0\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x82\xd1\x80\xd1\x8b \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb2\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb0\xd1\x8e\xd1\x82 \xd0\xb2 \xd1\x81\xd0\xb5\xd0\xb1\xd1\x8f:\n- **\xd0\xa1\xd0\xb2\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x87\xd0\xbb\xd0\xb5\xd0\xbd (\\( \\beta_0 \\))**: \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 Y, \xd0\xba\xd0\xbe\xd0\xb3\xd0\xb4\xd0\xb0 \xd0\xb2\xd1\x81\xd0\xb5 X \xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd1\x8b \xd0\xbd\xd1\x83\xd0\xbb\xd1\x8e.\n- **\xd0\x9a\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b (\\( \\beta_1, \\beta_2, ..., \\beta_n \\))**: \xd0\xbf\xd0\xbe\xd0\xba\xd0\xb0\xd0\xb7\xd1\x8b\xd0\xb2\xd0\xb0\xd1\x8e\xd1\x82, \xd0\xba\xd0\xb0\xd0\xba \xd0\xb8\xd0\xb7\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xba\xd0\xb0\xd0\xb6\xd0\xb4\xd0\xbe\xd0\xb9 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb2\xd0\xbb\xd0\xb8\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xbd\xd0\xb0 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x83\xd1\x8e \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x83\xd1\x8e. \xd0\x9d\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80, \xd0\xb5\xd1\x81\xd0\xbb\xd0\xb8 \\( \\beta_1 \\) \xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xbe 2, \xd1\x8d\xd1\x82\xd0\xbe \xd0\xbe\xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb0\xd0\xb5\xd1\x82, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb8 \xd1\x83\xd0\xb2\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb8 \\( X_1 \\) \xd0\xbd\xd0\xb0 1, \\( Y \\) \xd1\x83\xd0\xb2\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb8\xd1\x82\xd1\x81\xd1\x8f \xd0\xbd\xd0\xb0 2, \xd0\xbf\xd1\x80\xd0\xb8 \xd1\x83\xd1\x81\xd0\xbb\xd0\xbe\xd0\xb2\xd0\xb8\xd0\xb8, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xbf\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x8f\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8.\n\n## \xd0\x9f\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n\xd0\x94\xd0\xbb\xd1\x8f \xd0\xba\xd0\xbe\xd1\x80\xd1\x80\xd0\xb5\xd0\xba\xd1\x82\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd0\xbe \xd1\x83\xd1\x87\xd0\xb8\xd1\x82\xd1\x8b\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd1\x83\xd1\x8e\xd1\x89\xd0\xb8\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f:\n\n1. **\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\xa1\xd1\x83\xd1\x89\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb5\xd1\x82 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x81\xd0\xb2\xd1\x8f\xd0\xb7\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd0\xb9 \xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8.\n2. **\xd0\x9d\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xbe\xd0\xba**: \xd0\x9e\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb8 (\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xb8) \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xbd\xd1\x8b \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3 \xd0\xbe\xd1\x82 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xb0.\n3. **\xd0\x93\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x81\xd0\xba\xd0\xb5\xd0\xb4\xd0\xb0\xd1\x81\xd1\x82\xd0\xb8\xd1\x87\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x9e\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb8 \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xbd\xd1\x8b \xd0\xb8\xd0\xbc\xd0\xb5\xd1\x82\xd1\x8c \xd0\xbf\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x8f\xd0\xbd\xd0\xbd\xd1\x83\xd1\x8e \xd0\xb4\xd0\xb8\xd1\x81\xd0\xbf\xd0\xb5\xd1\x80\xd1\x81\xd0\xb8\xd1\x8e \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb2\xd1\x81\xd0\xb5\xd1\x85 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.\n4. **\xd0\x9d\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xbe\xd0\xba**: \xd0\x9e\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb8 \xd0\xb4\xd0\xbe\xd0\xbb\xd0\xb6\xd0\xbd\xd1\x8b \xd0\xb1\xd1\x8b\xd1\x82\xd1\x8c \xd0\xbd\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd1\x80\xd0\xb0\xd1\x81\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xbd\xd1\x8b, \xd0\xbe\xd1\x81\xd0\xbe\xd0\xb1\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8b\xd1\x85 \xd0\xb2\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80\xd0\xbe\xd0\xba.\n\n\xd0\xa1\xd0\xbe\xd0\xb1\xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd1\x8d\xd1\x82\xd0\xb8\xd1\x85 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbf\xd0\xbe\xd0\xb7\xd0\xb2\xd0\xbe\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xbe\xd0\xb1\xd0\xb5\xd1\x81\xd0\xbf\xd0\xb5\xd1\x87\xd0\xb8\xd1\x82\xd1\x8c \xd0\xbd\xd0\xb0\xd0\xb4\xd0\xb5\xd0\xb6\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xb8 \xd1\x82\xd0\xbe\xd1\x87\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8.\n\n\n# \xd0\x9c\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd1\x8b \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n## \xd0\x9c\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\n\n\xd0\x9c\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4 \xd0\xbd\xd0\xb0\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 (\xd0\x9c\xd0\x9d\xd0\x9a) \xe2\x80\x94 \xd1\x8d\xd1\x82\xd0\xbe \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd0\xba\xd0\xb8\xd0\xb9 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4, \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbe\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb8 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x82\xd1\x80\xd0\xbe\xd0\xb2 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8. \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd0\xb0\xd1\x8f \xd0\xb8\xd0\xb4\xd0\xb5\xd1\x8f \xd0\xb7\xd0\xb0\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2 \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 \xd1\x81\xd1\x83\xd0\xbc\xd0\xbc\xd1\x8b \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb5\xd0\xb9 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbd\xd0\xb0\xd0\xb1\xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb0\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8 \xd0\xb8 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc\xd0\xb8, \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd1\x8c\xd1\x8e.\n\n### \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbd\xd1\x86\xd0\xb8\xd0\xbf \xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd1\x8b\n\n1. **\xd0\xa4\xd0\xbe\xd1\x80\xd0\xbc\xd1\x83\xd0\xbb\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xba\xd0\xb0 \xd0\xb7\xd0\xb0\xd0\xb4\xd0\xb0\xd1\x87\xd0\xb8**: \xd0\x9f\xd1\x83\xd1\x81\xd1\x82\xd1\x8c \xd1\x83 \xd0\xbd\xd0\xb0\xd1\x81 \xd0\xb5\xd1\x81\xd1\x82\xd1\x8c \xd0\xbd\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x80 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85, \xd1\x81\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x8f\xd1\x89\xd0\xb8\xd0\xb9 \xd0\xb8\xd0\xb7 \xd0\xbf\xd0\xb0\xd1\x80 (x, y), \xd0\xb3\xd0\xb4\xd0\xb5 x \xe2\x80\x94 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f, \xd0\xb0 y \xe2\x80\x94 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xb0\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f. \xd0\x9c\xd1\x8b \xd1\x85\xd0\xbe\xd1\x82\xd0\xb8\xd0\xbc \xd0\xbd\xd0\xb0\xd0\xb9\xd1\x82\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x83\xd1\x8e \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xb2 \xd0\xb2\xd0\xb8\xd0\xb4\xd0\xb5 \xd1\x83\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f:\n\n   \\[\n   y = \\beta_0 + \\beta_1 x + \\epsilon\n   \\]\n\n   \xd0\xb3\xd0\xb4\xd0\xb5:\n   - \\( \\beta_0 \\) \xe2\x80\x94 \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xbd\xd1\x8b\xd0\xb9 \xd1\x87\xd0\xbb\xd0\xb5\xd0\xbd,\n   - \\( \\beta_1 \\) \xe2\x80\x94 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82 \xd0\xbd\xd0\xb0\xd0\xba\xd0\xbb\xd0\xbe\xd0\xbd\xd0\xb0,\n   - \\( \\epsilon \\) \xe2\x80\x94 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb0.\n\n2. **\xd0\x9c\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xba\xd0\xb8**: \xd0\x9c\xd1\x8b \xd0\xbc\xd0\xb8\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd0\xbc \xd1\x84\xd1\x83\xd0\xbd\xd0\xba\xd1\x86\xd0\xb8\xd1\x8e \xd0\xbf\xd0\xbe\xd1\x82\xd0\xb5\xd1\x80\xd1\x8c, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd0\xb0\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd1\x82\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd1\x81\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb9 \xd1\x81\xd1\x83\xd0\xbc\xd0\xbc\xd1\x83 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbe\xd1\x88\xd0\xb8\xd0\xb1\xd0\xbe\xd0\xba:\n\n   \\[\n   L(\\beta_0, \\beta_1) = \\sum_{i=1}^{n} (y_i - (\\beta_0 + \\beta_1 x_i))^2\n   \\]\n\n3. **\xd0\xa0\xd0\xb5\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd1\x83\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9**: \xd0\x94\xd0\xbb\xd1\x8f \xd0\xbd\xd0\xb0\xd1\x85\xd0\xbe\xd0\xb6\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbe\xd0\xbf\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \\( \\beta_0 \\) \xd0\xb8 \\( \\beta_1 \\) \xd0\xbc\xd1\x8b \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbc \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd0\xbd\xd0\xbe\xd1\x80\xd0\xbc\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x83\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f:\n\n   \\[\n   \\beta_1 = \\frac{n(\\sum xy) - (\\sum x)(\\sum y)}{n(\\sum x^2) - (\\sum x)^2}\n   \\]\n\n   \\[\n   \\beta_0 = \\bar{y} - \\beta_1 \\bar{x}\n   \\]\n\n   \xd0\xb3\xd0\xb4\xd0\xb5 \\( \\bar{x} \\) \xd0\xb8 \\( \\bar{y} \\) \xe2\x80\x94 \xd1\x81\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f x \xd0\xb8 y \xd1\x81\xd0\xbe\xd0\xbe\xd1\x82\xd0\xb2\xd0\xb5\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe.\n\n## \xd0\xa0\xd0\xb5\xd0\xb3\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f\n\n\xd0\xa0\xd0\xb5\xd0\xb3\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xe2\x80\x94 \xd1\x8d\xd1\x82\xd0\xbe \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4, \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd0\xbc\xd1\x8b\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbe\xd1\x82\xd0\xb2\xd1\x80\xd0\xb0\xd1\x89\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8, \xd0\xb4\xd0\xbe\xd0\xb1\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd1\x8f \xd1\x88\xd1\x82\xd1\x80\xd0\xb0\xd1\x84 \xd0\xb7\xd0\xb0 \xd1\x81\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8. \xd0\x92 \xd0\xba\xd0\xbe\xd0\xbd\xd1\x82\xd0\xb5\xd0\xba\xd1\x81\xd1\x82\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd1\x81\xd1\x83\xd1\x89\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd1\x8e\xd1\x82 \xd0\xb4\xd0\xb2\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x82\xd0\xb8\xd0\xbf\xd0\xb0 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8: Lasso \xd0\xb8 Ridge.\n\n### Lasso (L1-\xd1\x80\xd0\xb5\xd0\xb3\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f)\n\nLasso \xd0\xb4\xd0\xbe\xd0\xb1\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd1\x88\xd1\x82\xd1\x80\xd0\xb0\xd1\x84, \xd0\xbf\xd1\x80\xd0\xbe\xd0\xbf\xd0\xbe\xd1\x80\xd1\x86\xd0\xb8\xd0\xbe\xd0\xbd\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xb0\xd0\xb1\xd1\x81\xd0\xbe\xd0\xbb\xd1\x8e\xd1\x82\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb2\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb8\xd0\xbd\xd0\xb5 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xb2:\n\n\\[\nL(\\beta) = \\sum_{i=1}^{n} (y_i - (\\beta_0 + \\beta_1 x_i))^2 + \\lambda \\sum_{j=1}^{p} |\\beta_j|\n\\]\n\n\xd0\xb3\xd0\xb4\xd0\xb5 \\( \\lambda \\) \xe2\x80\x94 \xd0\xbf\xd0\xb0\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x82\xd1\x80 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8, \xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd0\xb9 \xd0\xba\xd0\xbe\xd0\xbd\xd1\x82\xd1\x80\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd1\x82 \xd1\x81\xd1\x82\xd0\xb5\xd0\xbf\xd0\xb5\xd0\xbd\xd1\x8c \xd1\x88\xd1\x82\xd1\x80\xd0\xb0\xd1\x84\xd0\xb0.\n\n### Ridge (L2-\xd1\x80\xd0\xb5\xd0\xb3\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f)\n\nRidge \xd0\xb4\xd0\xbe\xd0\xb1\xd0\xb0\xd0\xb2\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd1\x88\xd1\x82\xd1\x80\xd0\xb0\xd1\x84, \xd0\xbf\xd1\x80\xd0\xbe\xd0\xbf\xd0\xbe\xd1\x80\xd1\x86\xd0\xb8\xd0\xbe\xd0\xbd\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xb9 \xd0\xba\xd0\xb2\xd0\xb0\xd0\xb4\xd1\x80\xd0\xb0\xd1\x82\xd1\x83 \xd0\xb2\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb8\xd0\xbd\xd1\x8b \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xb2:\n\n\\[\nL(\\beta) = \\sum_{i=1}^{n} (y_i - (\\beta_0 + \\beta_1 x_i))^2 + \\lambda \\sum_{j=1}^{p} \\beta_j^2\n\\]\n\n### \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8\n\n\xd0\xa0\xd0\xb5\xd0\xb3\xd1\x83\xd0\xbb\xd1\x8f\xd1\x80\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xbc\xd0\xbe\xd0\xb3\xd0\xb0\xd0\xb5\xd1\x82 \xd1\x83\xd0\xbb\xd1\x83\xd1\x87\xd1\x88\xd0\xb8\xd1\x82\xd1\x8c \xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb1\xd1\x89\xd0\xb0\xd1\x8e\xd1\x89\xd1\x83\xd1\x8e \xd1\x81\xd0\xbf\xd0\xbe\xd1\x81\xd0\xbe\xd0\xb1\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8, \xd0\xbe\xd1\x81\xd0\xbe\xd0\xb1\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xbe \xd0\xba\xd0\xbe\xd0\xb3\xd0\xb4\xd0\xb0 \xd0\xba\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb8\xd0\xb7\xd0\xbd\xd0\xb0\xd0\xba\xd0\xbe\xd0\xb2 \xd0\xb2\xd0\xb5\xd0\xbb\xd0\xb8\xd0\xba\xd0\xbe \xd0\xbf\xd0\xbe \xd1\x81\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8e \xd1\x81 \xd0\xba\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe\xd0\xbc \xd0\xbd\xd0\xb0\xd0\xb1\xd0\xbb\xd1\x8e\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9. \xd0\x92\xd1\x8b\xd0\xb1\xd0\xbe\xd1\x80 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 Lasso \xd0\xb8 Ridge \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd1\x82 \xd0\xbe\xd1\x82 \xd0\xba\xd0\xbe\xd0\xbd\xd0\xba\xd1\x80\xd0\xb5\xd1\x82\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb7\xd0\xb0\xd0\xb4\xd0\xb0\xd1\x87\xd0\xb8 \xd0\xb8 \xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xba\xd1\x82\xd1\x83\xd1\x80\xd1\x8b \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.\n\n\n# \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n## \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80\xd1\x8b \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f\n\n\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd1\x88\xd0\xb8\xd1\x80\xd0\xbe\xd0\xba\xd0\xbe \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbe\xd0\xb1\xd0\xbb\xd0\xb0\xd1\x81\xd1\x82\xd1\x8f\xd1\x85 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85. \xd0\x92\xd0\xbe\xd1\x82 \xd0\xbd\xd0\xb5\xd1\x81\xd0\xba\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xba\xd0\xbe \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80\xd0\xbe\xd0\xb2:\n\n1. **\xd0\xad\xd0\xba\xd0\xbe\xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb8\xd0\xba\xd0\xb0**: \xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd0\xbd\xd0\xbe\xd0\xb7\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd1\x86\xd0\xb5\xd0\xbd \xd0\xbd\xd0\xb0 \xd0\xb6\xd0\xb8\xd0\xbb\xd1\x8c\xd0\xb5 \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x84\xd0\xb0\xd0\xba\xd1\x82\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb2, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb0\xd0\xba \xd0\xbf\xd0\xbb\xd0\xbe\xd1\x89\xd0\xb0\xd0\xb4\xd1\x8c, \xd0\xba\xd0\xbe\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe \xd0\xba\xd0\xbe\xd0\xbc\xd0\xbd\xd0\xb0\xd1\x82 \xd0\xb8 \xd0\xbc\xd0\xb5\xd1\x81\xd1\x82\xd0\xbe\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5.\n   \n2. **\xd0\x9c\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x86\xd0\xb8\xd0\xbd\xd0\xb0**: \xd0\x9e\xd1\x86\xd0\xb5\xd0\xbd\xd0\xba\xd0\xb0 \xd0\xb2\xd0\xbb\xd0\xb8\xd1\x8f\xd0\xbd\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x84\xd0\xb0\xd0\xba\xd1\x82\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb2 \xd0\xbd\xd0\xb0 \xd0\xb7\xd0\xb4\xd0\xbe\xd1\x80\xd0\xbe\xd0\xb2\xd1\x8c\xd0\xb5 \xd0\xbf\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb0, \xd0\xbd\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80, \xd1\x81\xd0\xb2\xd1\x8f\xd0\xb7\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd1\x83\xd1\x80\xd0\xbe\xd0\xb2\xd0\xbd\xd0\xb5\xd0\xbc \xd1\x85\xd0\xbe\xd0\xbb\xd0\xb5\xd1\x81\xd1\x82\xd0\xb5\xd1\x80\xd0\xb8\xd0\xbd\xd0\xb0 \xd0\xb8 \xd1\x80\xd0\xb8\xd1\x81\xd0\xba\xd0\xbe\xd0\xbc \xd1\x81\xd0\xb5\xd1\x80\xd0\xb4\xd0\xb5\xd1\x87\xd0\xbd\xd0\xbe-\xd1\x81\xd0\xbe\xd1\x81\xd1\x83\xd0\xb4\xd0\xb8\xd1\x81\xd1\x82\xd1\x8b\xd1\x85 \xd0\xb7\xd0\xb0\xd0\xb1\xd0\xbe\xd0\xbb\xd0\xb5\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb9.\n\n3. **\xd0\x9c\xd0\xb0\xd1\x80\xd0\xba\xd0\xb5\xd1\x82\xd0\xb8\xd0\xbd\xd0\xb3**: \xd0\x90\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7 \xd0\xb2\xd0\xbb\xd0\xb8\xd1\x8f\xd0\xbd\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb5\xd0\xba\xd0\xbb\xd0\xb0\xd0\xbc\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x80\xd0\xb0\xd1\x81\xd1\x85\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xb2 \xd0\xbd\xd0\xb0 \xd0\xbe\xd0\xb1\xd1\x8a\xd0\xb5\xd0\xbc \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb4\xd0\xb0\xd0\xb6, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbf\xd0\xbe\xd0\xb7\xd0\xb2\xd0\xbe\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xba\xd0\xbe\xd0\xbc\xd0\xbf\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f\xd0\xbc \xd0\xbe\xd0\xbf\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb8 \xd0\xb1\xd1\x8e\xd0\xb4\xd0\xb6\xd0\xb5\xd1\x82\xd1\x8b.\n\n4. **\xd0\xa1\xd0\xbf\xd0\xbe\xd1\x80\xd1\x82**: \xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd0\xbd\xd0\xbe\xd0\xb7\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2 \xd0\xbc\xd0\xb0\xd1\x82\xd1\x87\xd0\xb5\xd0\xb9 \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd0\xba\xd0\xb8 \xd0\xb8\xd0\xb3\xd1\x80\xd0\xbe\xd0\xba\xd0\xbe\xd0\xb2 \xd0\xb8 \xd0\xba\xd0\xbe\xd0\xbc\xd0\xb0\xd0\xbd\xd0\xb4.\n\n5. **\xd0\x9d\xd0\xb0\xd1\x83\xd0\xba\xd0\xb0**: \xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8 \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8 \xd0\xb2 \xd1\x8d\xd0\xba\xd1\x81\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb0\xd1\x85, \xd0\xbd\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80, \xd0\xb2\xd0\xbb\xd0\xb8\xd1\x8f\xd0\xbd\xd0\xb8\xd0\xb5 \xd1\x82\xd0\xb5\xd0\xbc\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x82\xd1\x83\xd1\x80\xd1\x8b \xd0\xbd\xd0\xb0 \xd1\x81\xd0\xba\xd0\xbe\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd1\x80\xd0\xb5\xd0\xb0\xd0\xba\xd1\x86\xd0\xb8\xd0\xb8.\n\n## \xd0\x9f\xd1\x80\xd0\xb5\xd0\xb8\xd0\xbc\xd1\x83\xd1\x89\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0 \xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xb8\n\n### \xd0\x9f\xd1\x80\xd0\xb5\xd0\xb8\xd0\xbc\xd1\x83\xd1\x89\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd0\xb0\n\n- **\xd0\x9f\xd1\x80\xd0\xbe\xd1\x81\xd1\x82\xd0\xbe\xd1\x82\xd0\xb0**: \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb5\xd0\xb3\xd0\xba\xd0\xbe \xd0\xbf\xd0\xbe\xd0\xbd\xd0\xb8\xd0\xbc\xd0\xb0\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd0\xb8 \xd0\xb8\xd0\xbd\xd1\x82\xd0\xb5\xd1\x80\xd0\xbf\xd1\x80\xd0\xb5\xd1\x82\xd0\xb8\xd1\x80\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xb5\xd1\x91 \xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd1\x83\xd0\xbf\xd0\xbd\xd0\xbe\xd0\xb9 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.\n  \n- **\xd0\x91\xd1\x8b\xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd1\x82\xd0\xb0**: \xd0\x9c\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb1\xd1\x8b\xd1\x81\xd1\x82\xd1\x80\xd0\xbe \xd0\xbe\xd0\xb1\xd1\x83\xd1\x87\xd0\xb0\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbf\xd0\xbe\xd0\xb7\xd0\xb2\xd0\xbe\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd1\x8d\xd1\x84\xd1\x84\xd0\xb5\xd0\xba\xd1\x82\xd0\xb8\xd0\xb2\xd0\xbd\xd0\xbe \xd0\xbe\xd0\xb1\xd1\x80\xd0\xb0\xd0\xb1\xd0\xb0\xd1\x82\xd1\x8b\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb8\xd0\xb5 \xd0\xbe\xd0\xb1\xd1\x8a\xd0\xb5\xd0\xbc\xd1\x8b \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85.\n\n- **\xd0\x9d\xd0\xb5\xd0\xbf\xd0\xb0\xd1\x80\xd0\xb0\xd0\xbc\xd0\xb5\xd1\x82\xd1\x80\xd0\xb8\xd1\x87\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbd\xd0\xb5 \xd1\x82\xd1\x80\xd0\xb5\xd0\xb1\xd1\x83\xd0\xb5\xd1\x82 \xd1\x81\xd1\x82\xd1\x80\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x85 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xbe \xd1\x80\xd0\xb0\xd1\x81\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb8 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85, \xd1\x87\xd1\x82\xd0\xbe \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xb5\xd1\x91 \xd1\x83\xd0\xbd\xd0\xb8\xd0\xb2\xd0\xb5\xd1\x80\xd1\x81\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd1\x8b\xd0\xbc \xd0\xb8\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xbc.\n\n- **\xd0\x9f\xd1\x80\xd0\xbe\xd0\xb3\xd0\xbd\xd0\xbe\xd0\xb7\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5**: \xd0\x9f\xd0\xbe\xd0\xb7\xd0\xb2\xd0\xbe\xd0\xbb\xd1\x8f\xd0\xb5\xd1\x82 \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb0\xd1\x82\xd1\x8c \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbd\xd0\xb0 \xd0\xbe\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd0\xb5 \xd1\x81\xd1\x83\xd1\x89\xd0\xb5\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd1\x8e\xd1\x89\xd0\xb8\xd1\x85 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb5\xd0\xb7\xd0\xbd\xd0\xbe \xd0\xb2 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbe\xd0\xb1\xd0\xbb\xd0\xb0\xd1\x81\xd1\x82\xd1\x8f\xd1\x85.\n\n### \xd0\x9d\xd0\xb5\xd0\xb4\xd0\xbe\xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xba\xd0\xb8\n\n- **\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xb0\xd0\xb3\xd0\xb0\xd0\xb5\xd1\x82 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x83\xd1\x8e \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xbc\xd0\xb5\xd0\xb6\xd0\xb4\xd1\x83 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xbc\xd0\xb8, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xbd\xd0\xb5 \xd1\x81\xd0\xbe\xd0\xbe\xd1\x82\xd0\xb2\xd0\xb5\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd1\x80\xd0\xb5\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8.\n\n- **\xd0\xa7\xd1\x83\xd0\xb2\xd1\x81\xd1\x82\xd0\xb2\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c \xd0\xba \xd0\xb2\xd1\x8b\xd0\xb1\xd1\x80\xd0\xbe\xd1\x81\xd0\xb0\xd0\xbc**: \xd0\x9d\xd0\xb0\xd0\xbb\xd0\xb8\xd1\x87\xd0\xb8\xd0\xb5 \xd0\xb2\xd1\x8b\xd0\xb1\xd1\x80\xd0\xbe\xd1\x81\xd0\xbe\xd0\xb2 \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xb7\xd0\xbd\xd0\xb0\xd1\x87\xd0\xb8\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd0\xb8\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb8\xd1\x82\xd1\x8c \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd1\x8b \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8.\n\n- **\xd0\x9c\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb8\xd0\xba\xd0\xbe\xd0\xbb\xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb0\xd1\x80\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x95\xd1\x81\xd0\xbb\xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd1\x8b\xd0\xb5 \xd0\xbf\xd0\xb5\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x81\xd0\xb8\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe \xd0\xba\xd0\xbe\xd1\x80\xd1\x80\xd0\xb5\xd0\xbb\xd0\xb8\xd1\x80\xd1\x83\xd1\x8e\xd1\x82 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3 \xd1\x81 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xbc, \xd1\x8d\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xbf\xd1\x80\xd0\xb8\xd0\xb2\xd0\xb5\xd1\x81\xd1\x82\xd0\xb8 \xd0\xba \xd0\xbd\xd0\xb5\xd1\x81\xd1\x82\xd0\xb0\xd0\xb1\xd0\xb8\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8 \xd0\xba\xd0\xbe\xd1\x8d\xd1\x84\xd1\x84\xd0\xb8\xd1\x86\xd0\xb8\xd0\xb5\xd0\xbd\xd1\x82\xd0\xbe\xd0\xb2.\n\n- **\xd0\x9e\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x87\xd0\xb5\xd0\xbd\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x81\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd1\x8c**: \xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f \xd0\xbd\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xb7\xd0\xb0\xd1\x85\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8b\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd1\x81\xd0\xbb\xd0\xbe\xd0\xb6\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xbd\xd0\xb5\xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xb7\xd0\xb0\xd0\xb2\xd0\xb8\xd1\x81\xd0\xb8\xd0\xbc\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8, \xd1\x87\xd1\x82\xd0\xbe \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xb5\xd1\x82 \xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x87\xd0\xb8\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd0\xb5\xd1\x91 \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd0\xbd\xd0\xb5\xd0\xba\xd0\xbe\xd1\x82\xd0\xbe\xd1\x80\xd1\x8b\xd1\x85 \xd0\xb7\xd0\xb0\xd0\xb4\xd0\xb0\xd1\x87\xd0\xb0\xd1\x85.\n\n\n# \xd0\x98\xd0\xbd\xd1\x81\xd1\x82\xd1\x80\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd1\x8b \xd0\xb8 \xd0\xb1\xd0\xb8\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xbe\xd1\x82\xd0\xb5\xd0\xba\xd0\xb8 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\n\n## Python\n\n\xd0\x92 Python \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb2\xd1\x8b\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd1\x87\xd0\xb0\xd1\x81\xd1\x82\xd0\xbe \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xb1\xd0\xb8\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xbe\xd1\x82\xd0\xb5\xd0\xba\xd0\xb8 `scikit-learn` \xd0\xb8 `statsmodels`. \n\n### \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f `scikit-learn`\n\n```python\n# \xd0\x98\xd0\xbc\xd0\xbf\xd0\xbe\xd1\x80\xd1\x82 \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xb1\xd0\xb8\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xbe\xd1\x82\xd0\xb5\xd0\xba\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.linear_model import LinearRegression\n\n# \xd0\x93\xd0\xb5\xd0\xbd\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85\nX = np.array([[1], [2], [3], [4], [5]])\ny = np.array([1, 2, 3, 4, 5])\n\n# \xd0\xa1\xd0\xbe\xd0\xb7\xd0\xb4\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\nmodel = LinearRegression()\n\n# \xd0\x9e\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\nmodel.fit(X, y)\n\n# \xd0\x9f\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5\ny_pred = model.predict(X)\n\n# \xd0\x92\xd0\xb8\xd0\xb7\xd1\x83\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\nplt.scatter(X, y, color=\'blue\', label=\'\xd0\x98\xd1\x81\xd1\x85\xd0\xbe\xd0\xb4\xd0\xbd\xd1\x8b\xd0\xb5 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5\')\nplt.plot(X, y_pred, color=\'red\', label=\'\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f\')\nplt.legend()\nplt.show()\n```\n\n### \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f `statsmodels`\n\n```python\n# \xd0\x98\xd0\xbc\xd0\xbf\xd0\xbe\xd1\x80\xd1\x82 \xd0\xbd\xd0\xb5\xd0\xbe\xd0\xb1\xd1\x85\xd0\xbe\xd0\xb4\xd0\xb8\xd0\xbc\xd1\x8b\xd1\x85 \xd0\xb1\xd0\xb8\xd0\xb1\xd0\xbb\xd0\xb8\xd0\xbe\xd1\x82\xd0\xb5\xd0\xba\nimport numpy as np\nimport statsmodels.api as sm\n\n# \xd0\x93\xd0\xb5\xd0\xbd\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85\nX = np.array([1, 2, 3, 4, 5])\ny = np.array([1, 2, 3, 4, 5])\n\n# \xd0\x94\xd0\xbe\xd0\xb1\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xba\xd0\xbe\xd0\xbd\xd1\x81\xd1\x82\xd0\xb0\xd0\xbd\xd1\x82\xd1\x8b \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x81\xd0\xb2\xd0\xbe\xd0\xb1\xd0\xbe\xd0\xb4\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd1\x87\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0\nX = sm.add_constant(X)\n\n# \xd0\xa1\xd0\xbe\xd0\xb7\xd0\xb4\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\nmodel = sm.OLS(y, X)\n\n# \xd0\x9e\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8\nresults = model.fit()\n\n# \xd0\x92\xd1\x8b\xd0\xb2\xd0\xbe\xd0\xb4 \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\nprint(results.summary())\n```\n\n## R\n\n\xd0\x92 R \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb2\xd1\x8b\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd1\x83\xd0\xb5\xd1\x82\xd1\x81\xd1\x8f \xd1\x84\xd1\x83\xd0\xbd\xd0\xba\xd1\x86\xd0\xb8\xd1\x8f `lm()`.\n\n### \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f\n\n```r\n# \xd0\x93\xd0\xb5\xd0\xbd\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85\nX <- c(1, 2, 3, 4, 5)\ny <- c(1, 2, 3, 4, 5)\n\n# \xd0\xa1\xd0\xbe\xd0\xb7\xd0\xb4\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\nmodel <- lm(y ~ X)\n\n# \xd0\x92\xd1\x8b\xd0\xb2\xd0\xbe\xd0\xb4 \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\nsummary(model)\n\n# \xd0\x92\xd0\xb8\xd0\xb7\xd1\x83\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\nplot(X, y, main="\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f", xlab="X", ylab="y")\nabline(model, col="red")\n```\n\n## MATLAB\n\n\xd0\x92 MATLAB \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb2\xd1\x8b\xd0\xbf\xd0\xbe\xd0\xbb\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xbe \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c \xd1\x84\xd1\x83\xd0\xbd\xd0\xba\xd1\x86\xd0\xb8\xd1\x8e `fitlm()`.\n\n### \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd1\x80 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f\n\n```matlab\n% \xd0\x93\xd0\xb5\xd0\xbd\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85\nX = (1:5)\';\ny = [1; 2; 3; 4; 5];\n\n% \xd0\xa1\xd0\xbe\xd0\xb7\xd0\xb4\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbc\xd0\xbe\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8\nmdl = fitlm(X, y);\n\n% \xd0\x92\xd1\x8b\xd0\xb2\xd0\xbe\xd0\xb4 \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\ndisp(mdl)\n\n% \xd0\x92\xd0\xb8\xd0\xb7\xd1\x83\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb7\xd1\x83\xd0\xbb\xd1\x8c\xd1\x82\xd0\xb0\xd1\x82\xd0\xbe\xd0\xb2\nfigure;\nscatter(X, y, \'b\');\nhold on;\ny_pred = predict(mdl, X);\nplot(X, y_pred, \'r\');\ntitle(\'\xd0\x9b\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd1\x8f\');\nxlabel(\'X\');\nylabel(\'y\');\nhold off;\n```\n\n\n# \xd0\x97\xd0\xb0\xd0\xba\xd0\xbb\xd1\x8e\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb8 \xd0\xb4\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb5\xd0\xb9\xd1\x88\xd0\xb8\xd0\xb5 \xd1\x88\xd0\xb0\xd0\xb3\xd0\xb8\n\n## \xd0\xa0\xd0\xb5\xd1\x81\xd1\x83\xd1\x80\xd1\x81\xd1\x8b \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb8\xd0\xb7\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f\n\n1. **\xd0\x9a\xd0\xbd\xd0\xb8\xd0\xb3\xd0\xb8**\n   - "\xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd0\xba\xd1\x83" - \xd0\xb0\xd0\xb2\xd1\x82\xd0\xbe\xd1\x80: \xd0\x94. \xd0\x9c. \xd0\x94. \xd0\x9a. \n   - "\xd0\x9c\xd0\xb0\xd1\x88\xd0\xb8\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb5 \xd0\xbe\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5: \xd0\xbf\xd0\xbe\xd0\xb4\xd1\x85\xd0\xbe\xd0\xb4\xd1\x8b \xd0\xb8 \xd0\xb0\xd0\xbb\xd0\xb3\xd0\xbe\xd1\x80\xd0\xb8\xd1\x82\xd0\xbc\xd1\x8b" - \xd0\xb0\xd0\xb2\xd1\x82\xd0\xbe\xd1\x80: \xd0\x98. \xd0\x98. \xd0\x98. \n\n2. **\xd0\x9e\xd0\xbd\xd0\xbb\xd0\xb0\xd0\xb9\xd0\xbd-\xd0\xba\xd1\x83\xd1\x80\xd1\x81\xd1\x8b**\n   - [Coursera: \xd0\x9e\xd1\x81\xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b \xd0\xbc\xd0\xb0\xd1\x88\xd0\xb8\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f](https://www.coursera.org/learn/machine-learning)\n   - [edX: \xd0\x92\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd1\x81\xd1\x82\xd0\xb0\xd1\x82\xd0\xb8\xd1\x81\xd1\x82\xd0\xb8\xd0\xba\xd1\x83 \xd0\xb8 \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85](https://www.edx.org/course/introduction-to-statistics-and-data-analysis)\n\n3. **\xd0\xa1\xd1\x82\xd0\xb0\xd1\x82\xd1\x8c\xd0\xb8 \xd0\xb8 \xd0\xb1\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8**\n   - [Towards Data Science](https://towardsdatascience.com/)\n   - [KDnuggets](https://www.kdnuggets.com/)\n\n4. **\xd0\x94\xd0\xbe\xd0\xba\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f**\n   - [Scikit-learn: \xd0\x94\xd0\xbe\xd0\xba\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd0\xbf\xd0\xbe \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8](https://scikit-learn.org/stable/modules/linear_model.html#linear-regression)\n   - [Statsmodels: \xd0\x94\xd0\xbe\xd0\xba\xd1\x83\xd0\xbc\xd0\xb5\xd0\xbd\xd1\x82\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f](https://www.statsmodels.org/stable/index.html)\n\n## \xd0\x91\xd1\x83\xd0\xb4\xd1\x83\xd1\x89\xd0\xb8\xd0\xb5 \xd0\xbd\xd0\xb0\xd0\xbf\xd1\x80\xd0\xb0\xd0\xb2\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb8\xd1\x81\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb9\n\n1. **\xd0\xa3\xd0\xbb\xd1\x83\xd1\x87\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb0\xd0\xbb\xd0\xb3\xd0\xbe\xd1\x80\xd0\xb8\xd1\x82\xd0\xbc\xd0\xbe\xd0\xb2**\n   - \xd0\x98\xd1\x81\xd1\x81\xd0\xbb\xd0\xb5\xd0\xb4\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbd\xd0\xbe\xd0\xb2\xd1\x8b\xd1\x85 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd0\xbe\xd0\xb2 \xd0\xbe\xd0\xbf\xd1\x82\xd0\xb8\xd0\xbc\xd0\xb8\xd0\xb7\xd0\xb0\xd1\x86\xd0\xb8\xd0\xb8 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xbf\xd0\xbe\xd0\xb2\xd1\x8b\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd1\x82\xd0\xbe\xd1\x87\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8.\n\n2. **\xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xb2 \xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85**\n   - \xd0\x98\xd0\xb7\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbf\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb2 \xd0\xba\xd0\xbe\xd0\xbd\xd1\x82\xd0\xb5\xd0\xba\xd1\x81\xd1\x82\xd0\xb5 \xd0\xb1\xd0\xbe\xd0\xbb\xd1\x8c\xd1\x88\xd0\xb8\xd1\x85 \xd0\xbe\xd0\xb1\xd1\x8a\xd0\xb5\xd0\xbc\xd0\xbe\xd0\xb2 \xd0\xb4\xd0\xb0\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xb8 \xd1\x80\xd0\xb0\xd1\x81\xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x81\xd0\xb8\xd1\x81\xd1\x82\xd0\xb5\xd0\xbc.\n\n3. **\xd0\x98\xd0\xbd\xd1\x82\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x81 \xd0\xb4\xd1\x80\xd1\x83\xd0\xb3\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd0\xb0\xd0\xbc\xd0\xb8**\n   - \xd0\x9a\xd0\xbe\xd0\xbc\xd0\xb1\xd0\xb8\xd0\xbd\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd1\x81 \xd0\xbc\xd0\xb5\xd1\x82\xd0\xbe\xd0\xb4\xd0\xb0\xd0\xbc\xd0\xb8 \xd0\xbc\xd0\xb0\xd1\x88\xd0\xb8\xd0\xbd\xd0\xbd\xd0\xbe\xd0\xb3\xd0\xbe \xd0\xbe\xd0\xb1\xd1\x83\xd1\x87\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd0\xbc\xd0\xb8 \xd0\xba\xd0\xb0\xd0\xba \xd0\xb4\xd0\xb5\xd1\x80\xd0\xb5\xd0\xb2\xd1\x8c\xd1\x8f \xd1\x80\xd0\xb5\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb9 \xd0\xb8 \xd0\xbd\xd0\xb5\xd0\xb9\xd1\x80\xd0\xbe\xd0\xbd\xd0\xbd\xd1\x8b\xd0\xb5 \xd1\x81\xd0\xb5\xd1\x82\xd0\xb8, \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x83\xd0\xbb\xd1\x83\xd1\x87\xd1\x88\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd1\x82\xd0\xb5\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x81\xd0\xbf\xd0\xbe\xd1\x81\xd0\xbe\xd0\xb1\xd0\xbd\xd0\xbe\xd1\x81\xd1\x82\xd0\xb8.\n\n4. **\xd0\x90\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7 \xd0\xb2\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x80\xd1\x8f\xd0\xb4\xd0\xbe\xd0\xb2**\n   - \xd0\x9f\xd1\x80\xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd0\xb5 \xd0\xbb\xd0\xb8\xd0\xbd\xd0\xb5\xd0\xb9\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x80\xd0\xb5\xd0\xb3\xd1\x80\xd0\xb5\xd1\x81\xd1\x81\xd0\xb8\xd0\xb8 \xd0\xb4\xd0\xbb\xd1\x8f \xd0\xb0\xd0\xbd\xd0\xb0\xd0\xbb\xd0\xb8\xd0\xb7\xd0\xb0 \xd0\xb8 \xd0\xbf\xd1\x80\xd0\xb5\xd0\xb4\xd1\x81\xd0\xba\xd0\xb0\xd0\xb7\xd0\xb0\xd0\xbd\xd0\xb8\xd1\x8f \xd0\xb2\xd1\x80\xd0\xb5\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbd\xd1\x8b\xd1\x85 \xd1\x80\xd1\x8f\xd0\xb4\xd0\xbe\xd0\xb2 \xd0\xb2 \xd1\x80\xd0\xb0\xd0\xb7\xd0\xbb\xd0\xb8\xd1\x87\xd0\xbd\xd1\x8b\xd1\x85 \xd0\xbe\xd0\xb1\xd0\xbb\xd0\xb0\xd1\x81\xd1\x82\xd1\x8f\xd1\x85, \xd1\x82\xd0\xb0\xd0\xba\xd0\xb8\xd1\x85 \xd0\xba\xd0\xb0\xd0\xba \xd1\x8d\xd0\xba\xd0\xbe\xd0\xbd\xd0\xbe\xd0\xbc\xd0\xb8\xd0\xba\xd0\xb0 \xd0\xb8 \xd1\x8d\xd0\xba\xd0\xbe\xd0\xbb\xd0\xbe\xd0\xb3\xd0\xb8\xd1\x8f.'), kwargs: {} 
Stack: Traceback (most recent call last):
  File "d:\danila_prj_my\meta-gpt\metagpt\utils\exceptions.py", line 33, in async_wrapper
    return await func(*args, **kwargs)
  File "d:\danila_prj_my\meta-gpt\metagpt\utils\file.py", line 40, in write
    async with aiofiles.open(full_path, mode="wb") as writer:
  File "D:\danila_prj_my\meta-gpt\.venv\lib\site-packages\aiofiles\base.py", line 98, in __aenter__
    self._obj = await self._coro
  File "D:\danila_prj_my\meta-gpt\.venv\lib\site-packages\aiofiles\threadpool\__init__.py", line 94, in _open
    f = yield from loop.run_in_executor(executor, cb)
  File "C:\Users\Denchik\AppData\Local\Programs\Python\Python39\lib\concurrent\futures\thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
OSError: [Errno 22] Invalid argument: 'data\\2024-11-06_22-52-40\\Что такое линейная регрессия?.md'

2024-11-06 22:54:06.346 | DEBUG    | metagpt.roles.role:_observe:431 - Stitch(Tutorial Assistant) observed: ['user: What is Linear Regre...']
2024-11-06 22:54:06.346 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteDirectory], state=0
2024-11-06 22:54:06.346 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression".\n\nPlease provide the specific table of contents for this tutorial, strictly following the following requirements:\n1. The output must be strictly in the specified language, Russion.\n2. Answer strictly in the dictionary format like {"title": "xxx", "directory": [{"dir 1": ["sub dir 1", "sub dir 2"]}, {"dir 2": ["sub dir 3", "sub dir 4"]}]}.\n3. The directory should be as specific and sufficient as possible, with a primary and secondary directory.The secondary directory is in the array.\n4. Do not have extra spaces or line breaks.\n5. Each directory title has practical significance.\n'}]
2024-11-06 22:54:09.418 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:54:09.418 | INFO     | __main__:_act:82 - {'title': 'Что такое линейная регрессия', 'directory': [{'Введение в линейную регрессию': ['Определение линейной регрессии', 'История линейной регрессии']}, {'Основные концепции линейной регрессии': ['Зависимая и независимая переменные', 'Уравнение линейной регрессии', 'Методы оценки параметров']}, {'Типы линейной регрессии': ['Простая линейная регрессия', 'Множественная линейная регрессия']}, {'Применение линейной регрессии': ['Примеры использования', 'Преимущества и недостатки']}, {'Оценка модели линейной регрессии': ['Метрики оценки', 'Проверка предположений']}, {'Заключение': ['Резюме', 'Будущее линейной регрессии']}]}
2024-11-06 22:54:09.430 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=0
2024-11-06 22:54:09.430 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Введение в линейную регрессию\': [\'Определение линейной регрессии\', \'История линейной регрессии\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression".\n'}]
2024-11-06 22:54:16.194 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:54:16.201 | INFO     | __main__:_act:86 - # Введение в линейную регрессию

## Определение линейной регрессии

Линейная регрессия — это статистический метод, используемый для моделирования отношений между зависимой переменной и одной или несколькими независимыми переменными. Основная цель линейной регрессии заключается в том, чтобы предсказать значение зависимой переменной на основе значений независимых переменных.

Модель линейной регрессии предполагает, что существует линейная зависимость между переменными, что можно выразить следующим уравнением:

\[ Y = a + bX + \epsilon \]

где:
- \( Y \) — зависимая переменная,
- \( a \) — свободный член (константа),
- \( b \) — коэффициент наклона (параметр),
- \( X \) — независимая переменная,
- \( \epsilon \) — ошибка (случайная ошибка).

Линейная регрессия может быть простой (одна независимая переменная) или множественной (несколько независимых переменных).

## История линейной регрессии

История линейной регрессии восходит к 19 веку. Основные этапы её развития включают:

1. **Франсис Гальтон (1885)**: Гальтон впервые ввел концепцию регрессии, исследуя связь между ростом родителей и их детей. Он заметил, что дети, как правило, имеют рост, который "регрессирует" к среднему значению.

2. **Карл Пирсон (1896)**: Пирсон разработал метод наименьших квадратов, который стал основой для линейной регрессии. Этот метод позволяет минимизировать сумму квадратов отклонений между наблюдаемыми и предсказанными значениями.

3. **Развитие в 20 веке**: В 20 веке линейная регрессия стала широко использоваться в различных областях, таких как экономика, биология и социальные науки. Появление вычислительных технологий значительно упростило применение линейной регрессии на практике.

Линейная регрессия продолжает оставаться одним из самых популярных методов анализа данных благодаря своей простоте и интерпретируемости.
2024-11-06 22:54:16.211 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=1
2024-11-06 22:54:16.211 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Основные концепции линейной регрессии\': [\'Зависимая и независимая переменные\', \'Уравнение линейной регрессии\', \'Методы оценки параметров\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression".\n'}]
2024-11-06 22:54:23.123 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:54:23.137 | INFO     | __main__:_act:86 - # Основные концепции линейной регрессии

## Зависимая и независимая переменные

В линейной регрессии различают две категории переменных:

- **Зависимая переменная (Y)**: Это переменная, которую мы пытаемся предсказать или объяснить. Она зависит от значений независимых переменных.
  
- **Независимая переменная (X)**: Это переменная, которая используется для предсказания значения зависимой переменной. Она не зависит от других переменных в модели.

Пример: Если мы хотим предсказать цену дома (Y) на основе его площади (X), то цена дома является зависимой переменной, а площадь — независимой.

## Уравнение линейной регрессии

Уравнение линейной регрессии описывает линейную зависимость между зависимой и независимой переменными. Оно имеет следующий вид:

\[ Y = \beta_0 + \beta_1 X + \epsilon \]

Где:
- \( Y \) — зависимая переменная.
- \( \beta_0 \) — свободный член (пересечение с осью Y).
- \( \beta_1 \) — коэффициент наклона (показывает, как изменяется Y при изменении X).
- \( X \) — независимая переменная.
- \( \epsilon \) — ошибка модели (разница между предсказанным и фактическим значением Y).

## Методы оценки параметров

Существует несколько методов для оценки параметров линейной регрессии:

1. **Метод наименьших квадратов (OLS)**: Этот метод минимизирует сумму квадратов разностей между фактическими и предсказанными значениями зависимой переменной. Он является наиболее распространенным методом оценки параметров линейной регрессии.

2. **Метод максимального правдоподобия**: Этот метод оценивает параметры модели, максимизируя вероятность наблюдаемых данных при заданных параметрах.

3. **Регуляризация**: Методы, такие как Lasso и Ridge, добавляют штрафы к величине коэффициентов, чтобы предотвратить переобучение модели.

Каждый из этих методов имеет свои преимущества и недостатки, и выбор метода зависит от конкретной задачи и данных.
2024-11-06 22:54:23.143 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=2
2024-11-06 22:54:23.143 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Типы линейной регрессии\': [\'Простая линейная регрессия\', \'Множественная линейная регрессия\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression".\n'}]
2024-11-06 22:54:35.274 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:54:35.287 | INFO     | __main__:_act:86 - # Типы линейной регрессии

## Простая линейная регрессия

Простая линейная регрессия — это метод статистического анализа, который используется для моделирования зависимости между двумя переменными. В этом методе предполагается, что существует линейная связь между независимой переменной (X) и зависимой переменной (Y). Модель описывается уравнением:

\[ Y = b_0 + b_1X + \epsilon \]

где:
- \( Y \) — зависимая переменная,
- \( b_0 \) — свободный член (пересечение с осью Y),
- \( b_1 \) — коэффициент наклона (изменение Y при изменении X на единицу),
- \( X \) — независимая переменная,
- \( \epsilon \) — ошибка модели.

### Пример

Для иллюстрации простой линейной регрессии можно использовать следующий код на Python с библиотекой `scikit-learn`:

```python
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# Генерация данных
X = np.array([[1], [2], [3], [4], [5]])
y = np.array([1, 2, 3, 4, 5])

# Создание модели
model = LinearRegression()
model.fit(X, y)

# Предсказание
y_pred = model.predict(X)

# Визуализация
plt.scatter(X, y, color='blue', label='Данные')
plt.plot(X, y_pred, color='red', label='Линейная регрессия')
plt.xlabel('Независимая переменная (X)')
plt.ylabel('Зависимая переменная (Y)')
plt.title('Простая линейная регрессия')
plt.legend()
plt.show()
```

## Множественная линейная регрессия

Множественная линейная регрессия — это расширение простой линейной регрессии, которое позволяет моделировать зависимость между одной зависимой переменной и несколькими независимыми переменными. Модель описывается уравнением:

\[ Y = b_0 + b_1X_1 + b_2X_2 + ... + b_nX_n + \epsilon \]

где:
- \( Y \) — зависимая переменная,
- \( b_0 \) — свободный член,
- \( b_1, b_2, ..., b_n \) — коэффициенты наклона для каждой независимой переменной,
- \( X_1, X_2, ..., X_n \) — независимые переменные,
- \( \epsilon \) — ошибка модели.

### Пример

Для иллюстрации множественной линейной регрессии можно использовать следующий код на Python с библиотекой `scikit-learn`:

```python
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

# Генерация данных
data = {
    'X1': [1, 2, 3, 4, 5],
    'X2': [5, 4, 3, 2, 1],
    'Y': [5, 4, 3, 2, 1]
}
df = pd.DataFrame(data)

# Определение независимых и зависимых переменных
X = df[['X1', 'X2']]
y = df['Y']

# Создание модели
model = LinearRegression()
model.fit(X, y)

# Предсказание
y_pred = model.predict(X)

# Вывод коэффициентов
print('Коэффициенты:', model.coef_)
print('Свободный член:', model.intercept_)
```

В этом примере мы создаем модель множественной линейной регрессии, используя две независимые переменные \( X1 \) и \( X2 \) для предсказания зависимой переменной \( Y \).
2024-11-06 22:54:35.296 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=3
2024-11-06 22:54:35.296 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Применение линейной регрессии\': [\'Примеры использования\', \'Преимущества и недостатки\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression".\n'}]
2024-11-06 22:54:41.393 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:54:41.393 | INFO     | __main__:_act:86 - # Применение линейной регрессии

## Примеры использования

Линейная регрессия широко используется в различных областях для анализа и предсказания данных. Вот несколько примеров:

1. **Экономика**: Прогнозирование цен на жилье на основе различных факторов, таких как площадь, количество комнат и местоположение.
   
2. **Медицина**: Оценка влияния различных факторов на здоровье пациента, например, связь между уровнем холестерина и риском сердечно-сосудистых заболеваний.

3. **Маркетинг**: Анализ влияния рекламных расходов на объем продаж, что позволяет компаниям оптимизировать свои бюджеты.

4. **Спорт**: Прогнозирование результатов матчей на основе статистики игроков и команд.

5. **Наука**: Моделирование зависимости между переменными в экспериментах, например, влияние температуры на скорость химической реакции.

## Преимущества и недостатки

### Преимущества

- **Простота**: Линейная регрессия легко понимается и интерпретируется, что делает её доступной для широкого круга пользователей.
  
- **Быстрота**: Модели линейной регрессии быстро обучаются и требуют относительно небольших вычислительных ресурсов.

- **Прогнозирование**: Позволяет делать предсказания на основе существующих данных, что полезно в различных областях.

- **Многофункциональность**: Может быть использована для решения как простых, так и сложных задач, включая множественную линейную регрессию.

### Недостатки

- **Линейность**: Предполагает линейную зависимость между переменными, что может не соответствовать реальным данным.

- **Чувствительность к выбросам**: Наличие выбросов может значительно исказить результаты модели.

- **Мультиколлинеарность**: В случае множественной линейной регрессии, высокая корреляция между независимыми переменными может привести к нестабильности коэффициентов.

- **Ограниченная предсказательная способность**: В сложных системах, где зависимости нелинейные, линейная регрессия может не давать точных предсказаний.
2024-11-06 22:54:41.411 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=4
2024-11-06 22:54:41.412 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Оценка модели линейной регрессии\': [\'Метрики оценки\', \'Проверка предположений\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression".\n'}]
2024-11-06 22:54:51.240 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:54:51.240 | INFO     | __main__:_act:86 - # Оценка модели линейной регрессии

## Метрики оценки

При оценке модели линейной регрессии используются различные метрики, которые помогают понять, насколько хорошо модель предсказывает целевую переменную. Основные метрики включают:

### 1. Средняя абсолютная ошибка (MAE)

MAE измеряет среднее абсолютное отклонение предсказанных значений от фактических значений. Формула для расчета MAE:

\[
MAE = \frac{1}{n} \sum_{i=1}^{n} |y_i - \hat{y}_i|
\]

где:
- \(y_i\) — фактическое значение,
- \(\hat{y}_i\) — предсказанное значение,
- \(n\) — количество наблюдений.

### 2. Среднеквадратичная ошибка (MSE)

MSE измеряет среднее квадратов отклонений предсказанных значений от фактических. Формула для расчета MSE:

\[
MSE = \frac{1}{n} \sum_{i=1}^{n} (y_i - \hat{y}_i)^2
\]

### 3. Корень среднеквадратичной ошибки (RMSE)

RMSE является квадратным корнем из MSE и предоставляет значение в тех же единицах, что и целевая переменная. Формула для расчета RMSE:

\[
RMSE = \sqrt{MSE}
\]

### 4. Коэффициент детерминации (R²)

R² показывает, какая доля вариации зависимой переменной объясняется независимыми переменными. Значение R² варьируется от 0 до 1, где 1 означает идеальное соответствие. Формула для расчета R²:

\[
R^2 = 1 - \frac{SS_{res}}{SS_{tot}}
\]

где:
- \(SS_{res}\) — сумма квадратов остатков,
- \(SS_{tot}\) — общая сумма квадратов.

## Проверка предположений

Для корректного применения линейной регрессии необходимо проверить несколько предположений:

### 1. Линейность

Предполагается, что существует линейная зависимость между независимыми и зависимой переменной. Это можно проверить с помощью графиков рассеяния.

### 2. Нормальность остатков

Остатки (разности между фактическими и предсказанными значениями) должны быть нормально распределены. Это можно проверить с помощью теста Шапиро-Уилка или графика Q-Q.

### 3. Гомоскедастичность

Предполагается, что дисперсия остатков постоянна для всех уровней независимых переменных. Это можно проверить с помощью графиков остатков.

### 4. Независимость остатков

Остатки должны быть независимыми. Это можно проверить с помощью теста Дарбина-Уотсона.

### 5. Отсутствие мультиколлинеарности

Независимые переменные не должны быть сильно коррелированы друг с другом. Это можно проверить с помощью матрицы корреляции или VIF (фактор инфляции дисперсии).
2024-11-06 22:54:51.254 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=5
2024-11-06 22:54:51.254 | DEBUG    | metagpt.provider.base_llm:aask:149 - [{'role': 'system', 'content': "You are a Tutorial Assistant, named Stitch, your goal is Generate tutorial documents. the constraint is Strictly follow Markdown's syntax, with neat and standardized layout. "}, {'role': 'user', 'content': '\nYou are now a seasoned technical professional in the field of the internet. \nWe need you to write a technical tutorial with the topic "What is Linear Regression".\n\nNow I will give you the module directory titles for the topic. \nPlease output the detailed principle content of this title in detail. \nIf there are code examples, please provide them according to standard code specifications. \nWithout a code example, it is not necessary.\n\nThe module directory titles for the topic is as follows:\n{\'Заключение\': [\'Резюме\', \'Будущее линейной регрессии\']}\n\nStrictly limit output according to the following requirements:\n1. Follow the Markdown syntax format for layout.\n2. If there are code examples, they must follow standard syntax specifications, have document annotations, and be displayed in code blocks.\n3. The output must be strictly in the specified language, Russion.\n4. Do not have redundant output, including concluding remarks.\n5. Strict requirement not to output the topic "What is Linear Regression".\n'}]
2024-11-06 22:54:57.167 | WARNING  | metagpt.provider.openai_api:_calc_usage:244 - usage calculation failed: num_tokens_from_messages() is not implemented for model gpt-4o-mini. See https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken for information on how messages are converted to tokens.
2024-11-06 22:54:57.167 | INFO     | __main__:_act:86 - # Заключение

## Резюме

Линейная регрессия — это один из самых простых и широко используемых методов статистического анализа и машинного обучения. Она позволяет моделировать зависимость между одной зависимой переменной и одной или несколькими независимыми переменными. Основная цель линейной регрессии заключается в нахождении наилучшей прямой линии, которая минимизирует разницу между предсказанными и фактическими значениями.

Ключевые моменты:
- Линейная регрессия может быть простой (одна независимая переменная) или множественной (несколько независимых переменных).
- Метод наименьших квадратов (МНК) используется для оценки коэффициентов регрессии.
- Линейная регрессия предполагает линейную зависимость между переменными, что может быть ограничением в некоторых случаях.

## Будущее линейной регрессии

Несмотря на появление более сложных методов машинного обучения, таких как деревья решений и нейронные сети, линейная регрессия остается актуальной благодаря своей простоте и интерпретируемости. В будущем можно ожидать:

- **Интеграция с новыми технологиями**: Линейная регрессия будет продолжать использоваться в сочетании с новыми методами анализа данных и инструментами визуализации.
- **Улучшение алгоритмов**: Разработка новых алгоритмов, которые могут улучшить точность линейной регрессии, особенно в условиях больших данных.
- **Образование и обучение**: Линейная регрессия останется важной темой в учебных курсах по статистике и машинному обучению, так как она служит основой для понимания более сложных моделей.

Линейная регрессия, благодаря своей простоте и эффективности, будет продолжать занимать важное место в аналитике данных и научных исследованиях.
2024-11-06 22:54:57.177 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:54:57.178 | DEBUG    | metagpt.roles.role:_set_state:325 - actions=[WriteContent, WriteContent, WriteContent, WriteContent, WriteContent, WriteContent], state=-1
2024-11-06 22:54:57.179 | DEBUG    | metagpt.utils.file:write:42 - Successfully write file: data\2024-11-06_22-54-57\Что такое линейная регрессия.md
